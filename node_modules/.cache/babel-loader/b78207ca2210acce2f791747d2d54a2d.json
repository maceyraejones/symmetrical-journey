{"ast":null,"code":"import { Observers } from \"./Observers.js\";\nimport { deprecationWarning } from \"../../utils/deprecation.js\";\n/**\n * Creates a Animatable object that can be animated. These objects can be passed into a {@link DeprecatedFrame} instead of a primitive like number\n * and afterwards animated with {@link (animate:function)}.\n * @remarks\n * ```jsx\n * const value = Animatable(0)\n * animate(value, 100)\n * ```\n * @param value - Value to animate\n * @returns Animatable value\n * @public\n * @deprecated Use {@link useMotionValue} instead\n */\n\nexport function Animatable(value) {\n  deprecationWarning(\"Animatable()\", \"2.0.0\", \"the new animation API (https://www.framer.com/api/animation/)\");\n  return isAnimatable(value) ? value : new AnimatableValue(value);\n}\n/**\n * @public\n */\n\n(function (Animatable) {\n  /**\n   * @internal\n   */\n  function transaction(update) {\n    const transactionId = Math.random();\n    const updatedValues = new Set();\n\n    const updater = (animatable, value) => {\n      animatable.set(value, transactionId);\n      updatedValues.add(animatable);\n    };\n\n    update(updater, transactionId);\n    const finishObservers = [];\n    updatedValues.forEach(value => {\n      finishObservers.push(...value.finishTransaction(transactionId));\n    });\n    finishObservers.forEach(finish => {\n      finish(transactionId);\n    });\n  }\n\n  Animatable.transaction = transaction;\n  /**\n   * @public\n   */\n\n  function getNumber(value) {\n    let defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return Animatable.get(value, defaultValue);\n  }\n\n  Animatable.getNumber = getNumber;\n  /** @internal */\n\n  function get(value, defaultValue) {\n    if (value === undefined || value === null) {\n      return defaultValue;\n    }\n\n    if (isAnimatable(value)) {\n      return value.get();\n    }\n\n    return value;\n  }\n\n  Animatable.get = get;\n  /**\n   * @internal\n   */\n\n  function objectToValues(object) {\n    if (!object) {\n      return object;\n    }\n\n    const result = {};\n\n    for (const key in object) {\n      const value = object[key];\n\n      if (isAnimatable(value)) {\n        result[key] = value.get();\n      } else {\n        result[key] = value;\n      }\n    }\n\n    return result;\n  }\n\n  Animatable.objectToValues = objectToValues;\n})(Animatable || (Animatable = {}));\n\nconst onUpdateKey = \"onUpdate\";\nconst finishTransactionKey = \"finishTransaction\";\n/**\n * @internal\n * @deprecated\n */\n\nexport function isAnimatable(value) {\n  return value !== null && typeof value === \"object\" && onUpdateKey in value && value[onUpdateKey] instanceof Function && finishTransactionKey in value && value[finishTransactionKey] instanceof Function;\n}\n\nfunction animatableInterpolation(value, currentInterpolation) {\n  return {\n    interpolate(from, to) {\n      const fromValue = from.get();\n      const toValue = to.get();\n      const result = Animatable(fromValue);\n      return progress => {\n        const v = currentInterpolation.interpolate(fromValue, toValue)(progress);\n        result.set(v);\n        return result;\n      };\n    },\n\n    difference(from, to) {\n      const v = from.get();\n      return currentInterpolation.difference(v, to.get());\n    }\n\n  };\n}\n\nclass AnimatableValue {\n  value;\n  observers = new Observers();\n\n  constructor(value) {\n    this.value = value;\n  }\n\n  static interpolationFor(value, currentInterpolation) {\n    if (isAnimatable(value)) {\n      return animatableInterpolation(value, currentInterpolation);\n    }\n  }\n\n  get() {\n    return this.value;\n  }\n\n  set(value, transaction) {\n    const oldValue = this.value;\n\n    if (isAnimatable(value)) {\n      value = value.get();\n    }\n\n    this.value = value;\n    const change = {\n      value,\n      oldValue\n    };\n    this.observers.notify(change, transaction);\n  }\n\n  finishTransaction(transaction) {\n    return this.observers.finishTransaction(transaction);\n  }\n\n  onUpdate(handler) {\n    return this.observers.add(handler);\n  }\n\n}","map":{"version":3,"mappings":"AAAA,SAAyBA,SAAzB,QAAoE,gBAApE;AAGA,SAASC,kBAAT,QAAmC,4BAAnC;AA+EA;;;;;;;;;;;;;;AAaA,OAAM,SAAUC,UAAV,CAA4BC,KAA5B,EAA4D;AAC9DF,oBAAkB,CAAC,cAAD,EAAiB,OAAjB,EAA0B,+DAA1B,CAAlB;AACA,SAAOG,YAAY,CAACD,KAAD,CAAZ,GAAsBA,KAAtB,GAA8B,IAAIE,eAAJ,CAAoBF,KAApB,CAArC;AACH;AAED;;;;AAGA,WAAiBD,UAAjB,EAA2B;AACvB;;;AAGA,WAAgBI,WAAhB,CACIC,MADJ,EAC8G;AAE1G,UAAMC,aAAa,GAAGC,IAAI,CAACC,MAAL,EAAtB;AACA,UAAMC,aAAa,GAAyB,IAAIC,GAAJ,EAA5C;;AACA,UAAMC,OAAO,GAAG,CAACC,UAAD,EAA8BX,KAA9B,KAAkD;AAC9DW,gBAAU,CAACC,GAAX,CAAeZ,KAAf,EAAsBK,aAAtB;AACAG,mBAAa,CAACK,GAAd,CAAkBF,UAAlB;AACH,KAHD;;AAIAP,UAAM,CAACM,OAAD,EAAUL,aAAV,CAAN;AACA,UAAMS,eAAe,GAAqB,EAA1C;AACAN,iBAAa,CAACO,OAAd,CAAsBf,KAAK,IAAG;AAC1Bc,qBAAe,CAACE,IAAhB,CAAqB,GAAGhB,KAAK,CAACiB,iBAAN,CAAwBZ,aAAxB,CAAxB;AACH,KAFD;AAGAS,mBAAe,CAACC,OAAhB,CAAwBG,MAAM,IAAG;AAC7BA,YAAM,CAACb,aAAD,CAAN;AACH,KAFD;AAGH;;AAjBeN,2BAAWI,WAAX;AAmBhB;;;;AAGA,WAAgBgB,SAAhB,CAA0BnB,KAA1B,EAAyG;AAAA,QAAxBoB,YAAwB,uEAAD,CAAC;AACrG,WAAOrB,UAAU,CAACsB,GAAX,CAAerB,KAAf,EAAsBoB,YAAtB,CAAP;AACH;;AAFerB,yBAASoB,SAAT;AAIhB;;AACA,WAAgBE,GAAhB,CAA2BrB,KAA3B,EAAgFoB,YAAhF,EAAmG;AAC/F,QAAIpB,KAAK,KAAKsB,SAAV,IAAuBtB,KAAK,KAAK,IAArC,EAA2C;AACvC,aAAOoB,YAAP;AACH;;AACD,QAAInB,YAAY,CAACD,KAAD,CAAhB,EAAyB;AACrB,aAAOA,KAAK,CAACqB,GAAN,EAAP;AACH;;AACD,WAAOrB,KAAP;AACH;;AAReD,mBAAGsB,GAAH;AAUhB;;;;AAGA,WAAgBE,cAAhB,CAAuCC,MAAvC,EAAuE;AACnE,QAAI,CAACA,MAAL,EAAa;AACT,aAAOA,MAAP;AACH;;AACD,UAAMC,MAAM,GAAQ,EAApB;;AACA,SAAK,MAAMC,GAAX,IAAkBF,MAAlB,EAA0B;AACtB,YAAMxB,KAAK,GAAGwB,MAAM,CAACE,GAAD,CAApB;;AACA,UAAIzB,YAAY,CAACD,KAAD,CAAhB,EAAyB;AACrByB,cAAM,CAACC,GAAD,CAAN,GAAc1B,KAAK,CAACqB,GAAN,EAAd;AACH,OAFD,MAEO;AACHI,cAAM,CAACC,GAAD,CAAN,GAAc1B,KAAd;AACH;AACJ;;AACD,WAAOyB,MAAP;AACH;;AAde1B,8BAAcwB,cAAd;AAenB,CA3DD,EAAiBxB,UAAU,KAAVA,UAAU,MAA3B;;AA6DA,MAAM4B,WAAW,GAA0B,UAA3C;AACA,MAAMC,oBAAoB,GAA0B,mBAApD;AAEA;;;;;AAIA,OAAM,SAAU3B,YAAV,CAAuBD,KAAvB,EAAiC;AACnC,SACIA,KAAK,KAAK,IAAV,IACA,OAAOA,KAAP,KAAiB,QADjB,IAEA2B,WAAW,IAAI3B,KAFf,IAGAA,KAAK,CAAC2B,WAAD,CAAL,YAA8BE,QAH9B,IAIAD,oBAAoB,IAAI5B,KAJxB,IAKAA,KAAK,CAAC4B,oBAAD,CAAL,YAAuCC,QAN3C;AAQH;;AAED,SAASC,uBAAT,CACI9B,KADJ,EAEI+B,oBAFJ,EAE4C;AAExC,SAAO;AACHC,eAAW,CAACC,IAAD,EAA0BC,EAA1B,EAA+C;AACtD,YAAMC,SAAS,GAAGF,IAAI,CAACZ,GAAL,EAAlB;AACA,YAAMe,OAAO,GAAGF,EAAE,CAACb,GAAH,EAAhB;AACA,YAAMI,MAAM,GAAG1B,UAAU,CAACoC,SAAD,CAAzB;AAEA,aAAQE,QAAD,IAAsC;AACzC,cAAMC,CAAC,GAAGP,oBAAoB,CAACC,WAArB,CAAiCG,SAAjC,EAA4CC,OAA5C,EAAqDC,QAArD,CAAV;AACAZ,cAAM,CAACb,GAAP,CAAW0B,CAAX;AACA,eAAOb,MAAP;AACH,OAJD;AAKH,KAXE;;AAYHc,cAAU,CAACN,IAAD,EAA0BC,EAA1B,EAA+C;AACrD,YAAMI,CAAC,GAAGL,IAAI,CAACZ,GAAL,EAAV;AACA,aAAOU,oBAAoB,CAACQ,UAArB,CAAgCD,CAAhC,EAAmCJ,EAAE,CAACb,GAAH,EAAnC,CAAP;AACH;;AAfE,GAAP;AAiBH;;AAED,MAAMnB,eAAN,CAAqB;AAGGF;AAFZwC,WAAS,GAAG,IAAI3C,SAAJ,EAAH;;AAEjB4C,cAAoBzC,KAApB,EAAgC;AAAZ;AAAgB;;AAEb,SAAhB0C,gBAAgB,CACnB1C,KADmB,EAEnB+B,oBAFmB,EAEqB;AAExC,QAAI9B,YAAY,CAACD,KAAD,CAAhB,EAAyB;AACrB,aAAO8B,uBAAuB,CAAQ9B,KAAR,EAAe+B,oBAAf,CAA9B;AACH;AACJ;;AAEDV,KAAG;AACC,WAAO,KAAKrB,KAAZ;AACH;;AAEDY,KAAG,CAACZ,KAAD,EAAmCG,WAAnC,EAA8D;AAC7D,UAAMwC,QAAQ,GAAG,KAAK3C,KAAtB;;AACA,QAAIC,YAAY,CAACD,KAAD,CAAhB,EAAyB;AACrBA,WAAK,GAAGA,KAAK,CAACqB,GAAN,EAAR;AACH;;AACD,SAAKrB,KAAL,GAAaA,KAAb;AACA,UAAM4C,MAAM,GAAG;AACX5C,WADW;AAEX2C;AAFW,KAAf;AAIA,SAAKH,SAAL,CAAeK,MAAf,CAAsBD,MAAtB,EAA8BzC,WAA9B;AACH;;AAEDc,mBAAiB,CAACd,WAAD,EAA2B;AACxC,WAAO,KAAKqC,SAAL,CAAevB,iBAAf,CAAiCd,WAAjC,CAAP;AACH;;AAED2C,UAAQ,CAACC,OAAD,EAAyB;AAC7B,WAAO,KAAKP,SAAL,CAAe3B,GAAf,CAAmBkC,OAAnB,CAAP;AACH;;AArCgB","names":["Observers","deprecationWarning","Animatable","value","isAnimatable","AnimatableValue","transaction","update","transactionId","Math","random","updatedValues","Set","updater","animatable","set","add","finishObservers","forEach","push","finishTransaction","finish","getNumber","defaultValue","get","undefined","objectToValues","object","result","key","onUpdateKey","finishTransactionKey","Function","animatableInterpolation","currentInterpolation","interpolate","from","to","fromValue","toValue","progress","v","difference","observers","constructor","interpolationFor","oldValue","change","notify","onUpdate","handler"],"sources":["../../../src/animation/Animatable/Animatable.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}