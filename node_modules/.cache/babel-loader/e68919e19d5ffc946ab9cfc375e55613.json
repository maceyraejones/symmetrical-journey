{"ast":null,"code":"import { TypefaceSourceNames } from \"./types.js\";\nexport const googleFontSelectorPrefix = \"GF;\";\n/** @internal */\n\nexport class GoogleFontSource {\n  name = TypefaceSourceNames.Google;\n  typefaces = [];\n  byFamily = new Map();\n\n  getTypefaceByFamily(family) {\n    return this.byFamily.get(family) ?? null;\n  }\n\n  parseSelector(selector) {\n    if (!selector.startsWith(googleFontSelectorPrefix)) return null;\n    const tokens = selector.split(\"-\");\n    if (tokens.length !== 2) return null;\n    const family = tokens[0].replace(googleFontSelectorPrefix, \"\");\n    const variant = tokens[1];\n    return {\n      family,\n      variant,\n      source: this.name\n    };\n  } // TODO: these are duplicated across implementations of FontSource\n  // When adding a third source, we should abstract them\n\n\n  createTypeface(family) {\n    const typeface = {\n      family: family,\n      fonts: [],\n      source: this.name\n    };\n    this.addTypeface(typeface);\n    return typeface;\n  }\n\n  addTypeface(typeface) {\n    this.typefaces.push(typeface);\n    this.byFamily.set(typeface.family, typeface);\n  } // end of duplication\n\n\n  importFonts(webFonts) {\n    let fontLocators = [];\n    webFonts.forEach(webFont => {\n      const locators = webFont.variants.map(variant => ({\n        source: this.name,\n        variant: variant,\n        family: webFont.family,\n        file: webFont.files[variant].replace(\"http://\", \"https://\")\n      }));\n      fontLocators = fontLocators.concat(locators);\n    });\n    return fontLocators;\n  }\n\n}","map":{"version":3,"mappings":"AAAA,SAKIA,mBALJ,QAOO,YAPP;AASA,OAAO,MAAMC,wBAAwB,GAAG,KAAjC;AAEP;;AACA,OAAM,MAAOC,gBAAP,CAAuB;AACzBC,MAAI,GAAuBH,mBAAmB,CAACI,MAA3C;AACJC,WAAS,GAAe,EAAf;AACTC,UAAQ,GAAG,IAAIC,GAAJ,EAAH;;AAERC,qBAAmB,CAACC,MAAD,EAAe;AAC9B,WAAO,KAAKH,QAAL,CAAcI,GAAd,CAAkBD,MAAlB,KAA6B,IAApC;AACH;;AAEDE,eAAa,CAACC,QAAD,EAAiB;AAC1B,QAAI,CAACA,QAAQ,CAACC,UAAT,CAAoBZ,wBAApB,CAAL,EAAoD,OAAO,IAAP;AACpD,UAAMa,MAAM,GAAGF,QAAQ,CAACG,KAAT,CAAe,GAAf,CAAf;AACA,QAAID,MAAM,CAACE,MAAP,KAAkB,CAAtB,EAAyB,OAAO,IAAP;AACzB,UAAMP,MAAM,GAAGK,MAAM,CAAC,CAAD,CAAN,CAAUG,OAAV,CAAkBhB,wBAAlB,EAA4C,EAA5C,CAAf;AACA,UAAMiB,OAAO,GAAGJ,MAAM,CAAC,CAAD,CAAtB;AACA,WAAO;AAAEL,YAAF;AAAUS,aAAV;AAAmBC,YAAM,EAAE,KAAKhB;AAAhC,KAAP;AACH,GAhBwB,CAkBzB;AACA;;;AACAiB,gBAAc,CAACX,MAAD,EAAe;AACzB,UAAMY,QAAQ,GAAG;AAAEZ,YAAM,EAAEA,MAAV;AAAkBa,WAAK,EAAE,EAAzB;AAA6BH,YAAM,EAAE,KAAKhB;AAA1C,KAAjB;AACA,SAAKoB,WAAL,CAAiBF,QAAjB;AACA,WAAOA,QAAP;AACH;;AAEOE,aAAW,CAACF,QAAD,EAAmB;AAClC,SAAKhB,SAAL,CAAemB,IAAf,CAAoBH,QAApB;AACA,SAAKf,QAAL,CAAcmB,GAAd,CAAkBJ,QAAQ,CAACZ,MAA3B,EAAmCY,QAAnC;AACH,GA7BwB,CA8BzB;;;AAEAK,aAAW,CAACC,QAAD,EAAuC;AAC9C,QAAIC,YAAY,GAAqB,EAArC;AACAD,YAAQ,CAACE,OAAT,CAAiBC,OAAO,IAAG;AACvB,YAAMC,QAAQ,GAAGD,OAAO,CAACE,QAAR,CAAiBC,GAAjB,CAAqBf,OAAO,KAAK;AAC9CC,cAAM,EAAE,KAAKhB,IADiC;AAE9Ce,eAAO,EAAEA,OAFqC;AAG9CT,cAAM,EAAEqB,OAAO,CAACrB,MAH8B;AAI9CyB,YAAI,EAAEJ,OAAO,CAACK,KAAR,CAAcjB,OAAd,EAAuBD,OAAvB,CAA+B,SAA/B,EAA0C,UAA1C;AAJwC,OAAL,CAA5B,CAAjB;AAMAW,kBAAY,GAAGA,YAAY,CAACQ,MAAb,CAAoBL,QAApB,CAAf;AACH,KARD;AASA,WAAOH,YAAP;AACH;;AA5CwB","names":["TypefaceSourceNames","googleFontSelectorPrefix","GoogleFontSource","name","Google","typefaces","byFamily","Map","getTypefaceByFamily","family","get","parseSelector","selector","startsWith","tokens","split","length","replace","variant","source","createTypeface","typeface","fonts","addTypeface","push","set","importFonts","webFonts","fontLocators","forEach","webFont","locators","variants","map","file","files","concat"],"sources":["../../../src/render/fonts/GoogleFontSource.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}