{"ast":null,"code":"const defaultCache = new Set();\nlet defaultSheet;\n/**\n * Add CSS to the document.\n *\n * @param cssRule - CSS rule to add to the document\n */\n\nexport function injectCSSRule(cssRule) {\n  let sheet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultSheet;\n  let cache = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultCache;\n  if (!cssRule || cache.has(cssRule) || typeof document === \"undefined\") return;\n  cache.add(cssRule);\n\n  if (!sheet) {\n    const styleElement = document.createElement(\"style\");\n    styleElement.setAttribute(\"type\", \"text/css\");\n    styleElement.setAttribute(\"data-framer-css\", \"true\");\n    document.head && document.head.appendChild(styleElement);\n    if (styleElement.sheet) sheet = styleElement.sheet;\n  }\n\n  try {\n    sheet.insertRule(cssRule, sheet.cssRules.length);\n  } catch (e) {// Assume that errors are from malformed rules, or rules that are not\n    // valid in the current browser. e.g.\n    // `input[type=\"range\"]::-moz-range-thumb` will error in Chrome, but not\n    // Firefox, and swallow the error.\n  }\n}","map":{"version":3,"mappings":"AAAA,MAAMA,YAAY,GAAG,IAAIC,GAAJ,EAArB;AACA,IAAIC,YAAJ;AAEA;;;;;;AAKA,OAAM,SAAUC,aAAV,CAAwBC,OAAxB,EAA+G;AAAA,MAAtEC,KAAsE,uEAA/CH,YAA+C;AAAA,MAAjCI,KAAiC,uEAAZN,YAAY;AACjH,MAAI,CAACI,OAAD,IAAYE,KAAK,CAACC,GAAN,CAAUH,OAAV,CAAZ,IAAkC,OAAOI,QAAP,KAAoB,WAA1D,EAAuE;AAEvEF,OAAK,CAACG,GAAN,CAAUL,OAAV;;AAEA,MAAI,CAACC,KAAL,EAAY;AACR,UAAMK,YAAY,GAAGF,QAAQ,CAACG,aAAT,CAAuB,OAAvB,CAArB;AACAD,gBAAY,CAACE,YAAb,CAA0B,MAA1B,EAAkC,UAAlC;AACAF,gBAAY,CAACE,YAAb,CAA0B,iBAA1B,EAA6C,MAA7C;AACAJ,YAAQ,CAACK,IAAT,IAAiBL,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BJ,YAA1B,CAAjB;AACA,QAAIA,YAAY,CAACL,KAAjB,EAAwBA,KAAK,GAAGK,YAAY,CAACL,KAArB;AAC3B;;AAED,MAAI;AACAA,SAAK,CAACU,UAAN,CAAiBX,OAAjB,EAA0BC,KAAK,CAACW,QAAN,CAAeC,MAAzC;AACH,GAFD,CAEE,OAAOC,CAAP,EAAU,CACR;AACA;AACA;AACA;AACH;AACJ","names":["defaultCache","Set","defaultSheet","injectCSSRule","cssRule","sheet","cache","has","document","add","styleElement","createElement","setAttribute","head","appendChild","insertRule","cssRules","length","e"],"sources":["../../../src/render/utils/setDocumentStyles.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}