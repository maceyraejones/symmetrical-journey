{"ast":null,"code":"import process from \"process\";\nimport * as React from \"react\";\nimport { transformString } from \"../utils/transformString.js\";\nimport { Layer } from \"./Layer.js\";\nimport { SVGRoot } from \"./SVGRoot.js\";\nimport { toSVGPath } from \"../traits/Path.js\";\nimport { shadowForShape } from \"../style/shadow.js\";\nimport { LinearGradientElement, RadialGradientElement } from \"./GradientElement.js\";\nimport { ImagePatternElement } from \"./ImagePatternElement.js\";\nimport { transformValues } from \"../utils/createTransformValues.js\";\nimport { imagePatternPropsForFill } from \"../utils/imagePatternPropsForFill.js\";\nimport { ConvertColor, Color } from \"../types/Color/index.js\";\nimport { svgElementAttributeDefaults } from \"../types/svgElementAttributeDefaults.js\";\nimport { RenderTarget } from \"../types/RenderEnvironment.js\";\nimport { RenderEnvironment } from \"../types/RenderEnvironment.js\";\nimport { LinearGradient, RadialGradient } from \"../types/Gradient.js\";\nimport { BackgroundImage } from \"../types/BackgroundImage.js\";\nimport { elementPropertiesForLinearGradient, elementPropertiesForRadialGradient } from \"../utils/elementPropertiesForGradient.js\";\nimport { InternalID } from \"../../utils/internalId.js\";\nimport { safeWindow } from \"../../utils/safeWindow.js\";\nimport { motion } from \"framer-motion\";\n/**\n * @internal\n */\n\nexport class Vector extends Layer {\n  static defaultVectorProps = {\n    isRootVectorNode: false,\n    name: null,\n    includeTransform: undefined,\n    defaultFillColor: undefined,\n    defaultStrokeColor: undefined,\n    defaultStrokeWidth: undefined,\n    defaultStrokeAlignment: \"center\",\n    width: 100,\n    height: 100,\n    rotation: 0,\n    rotate: undefined,\n    frame: undefined,\n    opacity: undefined,\n    calculatedPath: [],\n    d: undefined,\n    shapeId: undefined,\n    insideStroke: false,\n    strokeEnabled: true,\n    strokeClipId: undefined,\n    strokeWidth: undefined,\n    idAttribute: undefined,\n    transition: undefined,\n    shadows: [],\n    strokeAlpha: 1,\n    rect: {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    },\n    lineCap: \"butt\",\n    strokeColor: \"#0AF\",\n    lineJoin: \"miter\",\n    strokeMiterLimit: 4,\n    strokeDashArray: \"0\",\n    strokeDashOffset: 0,\n    fill: \"rgba(0,170,255,0.5)\"\n  };\n  static defaultProps = { ...Layer.defaultProps,\n    ...Vector.defaultVectorProps\n  };\n\n  render() {\n    if (process.env.NODE_ENV !== \"production\" && safeWindow[\"perf\"]) safeWindow[\"perf\"].nodeRender();\n    const {\n      opacity,\n      calculatedPath,\n      d,\n      insideStroke,\n      shapeId,\n      strokeEnabled,\n      strokeClipId,\n      strokeWidth,\n      idAttribute,\n      rect,\n      shadows,\n      strokeAlpha,\n      name,\n      includeTransform,\n      isRootVectorNode,\n      rotation,\n      id,\n      lineCap,\n      lineJoin,\n      strokeColor,\n      strokeMiterLimit,\n      strokeDashArray,\n      strokeDashOffset,\n      fill,\n      variants,\n      transition\n    } = this.props; // invisible shapes will result in these not being set, and should not be rendered\n\n    if (!id || !shapeId || !strokeClipId) return null;\n    const rotate = this.props.rotate ?? rotation ?? 0;\n    const {\n      target\n    } = RenderEnvironment;\n    /**\n     * @TODO For Vectors to animate smoothly in Generated Components, we\n     * need to reconsider how we set this transform. This transform needs to\n     * be set on changes for the image fill to update, but also used in an\n     * `initial` prop, and set by `variants` so that rotation animates. We\n     * also have to consider canvas performance.\n     */\n\n    const transform = transformValues(rect, rotate, isRootVectorNode, includeTransform);\n    let vectorFill;\n    let fillAlpha = 0;\n    let imagePattern;\n    let linearGradient;\n    let radialGradient;\n\n    if (typeof fill === \"string\" || Color.isColorObject(fill)) {\n      const fillColor = Color.isColorObject(fill) ? fill.initialValue || Color.toRgbString(fill) : fill;\n\n      if (fillColor !== \"transparent\") {\n        vectorFill = fillColor;\n        fillAlpha = ConvertColor.getAlpha(vectorFill);\n      }\n    } else if (LinearGradient.isLinearGradient(fill)) {\n      linearGradient = elementPropertiesForLinearGradient(fill, id);\n      vectorFill = `url(#${linearGradient.id})`;\n      fillAlpha = 1;\n    } else if (RadialGradient.isRadialGradient(fill)) {\n      radialGradient = elementPropertiesForRadialGradient(fill, id);\n      vectorFill = `url(#${radialGradient.id})`;\n      fillAlpha = 1;\n    } else if (BackgroundImage.isImageObject(fill)) {\n      imagePattern = imagePatternPropsForFill(fill, transform, id);\n\n      if (imagePattern) {\n        vectorFill = `url(#${imagePattern.id})`;\n        fillAlpha = 1;\n      }\n    }\n\n    if (vectorFill === svgElementAttributeDefaults.fill) {\n      vectorFill = undefined;\n    }\n\n    if (vectorFill === undefined) {\n      vectorFill = \"transparent\";\n    }\n\n    const fillEnabled = vectorFill !== undefined && vectorFill !== \"transparent\" && fillAlpha !== 0; // If both fill and stroke are disabled, pretend thereâ€™s a fill for the shadow\n\n    if (!fillEnabled && !strokeEnabled) {\n      fillAlpha = 1;\n    }\n\n    let mainElement;\n    let strokeClipPath = null;\n    let shapeReference = null;\n    let strokeElement = null;\n    let pathTranslate;\n    let elementTransform;\n    const translatePaths = target === RenderTarget.export;\n\n    if (transform.rotation === 0 && translatePaths) {\n      pathTranslate = transform;\n    } else {\n      pathTranslate = {\n        x: 0,\n        y: 0\n      };\n      elementTransform = transformString(transform);\n    }\n\n    const pathAttributes = {\n      d: d ?? toSVGPath(calculatedPath, pathTranslate, target),\n      transform: elementTransform\n    }; // When used from the Preview, we need to revive BoxShadow instances:\n\n    const svgStrokeAttributes = {};\n\n    if (strokeEnabled && strokeWidth !== 0) {\n      svgStrokeAttributes.strokeWidth = strokeWidth;\n      svgStrokeAttributes.stroke = strokeColor;\n      svgStrokeAttributes.strokeLinecap = lineCap;\n      svgStrokeAttributes.strokeLinejoin = lineJoin;\n\n      if (lineJoin === \"miter\") {\n        svgStrokeAttributes.strokeMiterlimit = strokeMiterLimit;\n      }\n\n      svgStrokeAttributes.strokeDasharray = strokeDashArray;\n\n      if (strokeDashOffset !== 0) {\n        svgStrokeAttributes.strokeDashoffset = strokeDashOffset;\n      }\n    }\n\n    for (const key in svgElementAttributeDefaults) {\n      if (svgStrokeAttributes[key] === svgElementAttributeDefaults[key]) {\n        svgStrokeAttributes[key] = undefined;\n      }\n    }\n\n    const internalShapeId = InternalID.forKey(shapeId);\n    const internalStrokeClipId = InternalID.forKey(strokeClipId);\n    const shadow = shadowForShape(shadows, rect, internalShapeId, fillAlpha, strokeAlpha, strokeWidth, internalStrokeClipId, svgStrokeAttributes);\n    const currentName = target === RenderTarget.preview ? name || undefined : undefined;\n\n    if (shadow.insetElement !== null || shadow.outsetElement !== null || insideStroke) {\n      pathAttributes.id = internalShapeId.id;\n      shapeReference = React.createElement(motion.path, { ...{ ...pathAttributes\n        },\n        variants: variants,\n        transition: transition\n      });\n\n      if (shadow.needsStrokeClip || insideStroke) {\n        strokeClipPath = React.createElement(\"clipPath\", {\n          id: internalStrokeClipId.id\n        }, React.createElement(\"use\", {\n          xlinkHref: internalShapeId.link\n        }));\n      }\n\n      if (shadow.insetElement !== null && strokeEnabled && strokeWidth && strokeWidth > 0) {\n        mainElement = React.createElement(\"use\", {\n          xlinkHref: internalShapeId.link,\n          fill: vectorFill,\n          strokeOpacity: \"0\",\n          name: currentName\n        });\n        strokeElement = React.createElement(\"use\", {\n          xlinkHref: internalShapeId.link,\n          clipPath: internalStrokeClipId.urlLink,\n          fill: \"transparent\",\n          ...svgStrokeAttributes,\n          strokeWidth: strokeWidth\n        });\n      } else {\n        mainElement = React.createElement(\"use\", {\n          xlinkHref: internalShapeId.link,\n          fill: vectorFill,\n          clipPath: internalStrokeClipId.urlLink,\n          ...svgStrokeAttributes,\n          strokeWidth: strokeWidth,\n          name: currentName\n        });\n      }\n    } else {\n      pathAttributes.id = idAttribute;\n      mainElement = React.createElement(motion.path, { ...{ ...pathAttributes,\n          fill: vectorFill,\n          ...svgStrokeAttributes\n        },\n        name: currentName,\n        variants: variants,\n        transition: transition\n      });\n    }\n\n    const imagePatternElement = imagePattern ? React.createElement(ImagePatternElement, { ...imagePattern\n    }) : undefined;\n    let gradient;\n\n    if (linearGradient) {\n      gradient = React.createElement(LinearGradientElement, { ...linearGradient\n      });\n    } else if (radialGradient) {\n      gradient = React.createElement(RadialGradientElement, { ...radialGradient\n      });\n    }\n\n    let defs = null;\n\n    if (shapeReference || strokeClipPath || shadow.definition && shadow.definition.length || gradient || imagePatternElement) {\n      defs = React.createElement(\"defs\", null, shapeReference, strokeClipPath, shadow.definition, gradient, imagePatternElement);\n    } // Generated Components with variants require a default value to animate to/from.\n\n\n    const opacityValue = opacity ?? (variants ? 1 : undefined);\n\n    if (defs === null && shadow.outsetElement === null && shadow.insetElement === null && strokeElement === null) {\n      // Render the mainElement with opacity\n      mainElement = React.createElement(motion.path, { ...{ ...pathAttributes,\n          fill: vectorFill,\n          ...svgStrokeAttributes\n        },\n        opacity: opacityValue,\n        variants: variants,\n        transition: transition,\n        name: currentName\n      }); // Don't group the main element if not needed:\n\n      return this.renderElement(mainElement);\n    } else {\n      return this.renderElement(React.createElement(motion.g, {\n        opacity: opacityValue,\n        variants: variants,\n        transition: transition\n      }, defs, shadow.outsetElement, mainElement, shadow.insetElement, strokeElement));\n    }\n  }\n\n  renderElement(element) {\n    const {\n      isRootVectorNode,\n      width,\n      height,\n      rect,\n      willChangeTransform\n    } = this.props;\n    const frame = this.props.frame ?? rect ?? {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 100\n    };\n    if (!isRootVectorNode) return element;\n    /**\n     * @TODO For generated components, this <svg> wrapper needs to become a\n     * <motion.svg> and animate it's changes to width/height with layout,\n     * and translate x & y with variants.\n     */\n\n    return React.createElement(SVGRoot, {\n      frame: frame,\n      width: width,\n      height: height,\n      willChangeTransform: willChangeTransform,\n      innerRef: this.setLayerElement\n    }, element);\n  }\n\n}","map":{"version":3,"mappings":"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","names":["process","React","transformString","Layer","SVGRoot","toSVGPath","shadowForShape","LinearGradientElement","RadialGradientElement","ImagePatternElement","transformValues","imagePatternPropsForFill","ConvertColor","Color","svgElementAttributeDefaults","RenderTarget","RenderEnvironment","LinearGradient","RadialGradient","BackgroundImage","elementPropertiesForLinearGradient","elementPropertiesForRadialGradient","InternalID","safeWindow","motion","Vector","defaultVectorProps","isRootVectorNode","name","includeTransform","undefined","defaultFillColor","defaultStrokeColor","defaultStrokeWidth","defaultStrokeAlignment","width","height","rotation","rotate","frame","opacity","calculatedPath","d","shapeId","insideStroke","strokeEnabled","strokeClipId","strokeWidth","idAttribute","transition","shadows","strokeAlpha","rect","x","y","lineCap","strokeColor","lineJoin","strokeMiterLimit","strokeDashArray","strokeDashOffset","fill","defaultProps","render","env","NODE_ENV","nodeRender","id","variants","props","target","transform","vectorFill","fillAlpha","imagePattern","linearGradient","radialGradient","isColorObject","fillColor","initialValue","toRgbString","getAlpha","isLinearGradient","isRadialGradient","isImageObject","fillEnabled","mainElement","strokeClipPath","shapeReference","strokeElement","pathTranslate","elementTransform","translatePaths","export","pathAttributes","svgStrokeAttributes","stroke","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeDasharray","strokeDashoffset","key","internalShapeId","forKey","internalStrokeClipId","shadow","currentName","preview","insetElement","outsetElement","path","needsStrokeClip","xlinkHref","link","strokeOpacity","clipPath","urlLink","imagePatternElement","gradient","defs","definition","length","opacityValue","renderElement","g","element","willChangeTransform","innerRef","setLayerElement"],"sources":["../../../src/render/presentation/Vector.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}