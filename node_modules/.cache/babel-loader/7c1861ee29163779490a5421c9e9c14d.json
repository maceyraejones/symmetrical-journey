{"ast":null,"code":"export function clamp(value, a, b) {\n  const min = Math.min(a, b);\n  const max = Math.max(a, b);\n\n  if (value < min) {\n    value = min;\n  }\n\n  if (value > max) {\n    value = max;\n  }\n\n  return value;\n} // TODO: use another function from Library\n\nexport function modulate(value, rangeA, rangeB) {\n  let limit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  const [fromLow, fromHigh] = rangeA;\n  const [toLow, toHigh] = rangeB;\n  const result = toLow + (value - fromLow) / (fromHigh - fromLow) * (toHigh - toLow);\n\n  if (limit === true) {\n    if (toLow < toHigh) {\n      if (result < toLow) {\n        return toLow;\n      }\n\n      if (result > toHigh) {\n        return toHigh;\n      }\n    } else {\n      if (result > toLow) {\n        return toLow;\n      }\n\n      if (result < toHigh) {\n        return toHigh;\n      }\n    }\n  }\n\n  return result;\n}\nexport function isNumeric(value) {\n  return !isNaN(value) && isFinite(value);\n}\nexport function percentToFraction(val) {\n  const digits = numberFromString(val);\n\n  if (digits !== undefined) {\n    if (val.includes(\"%\")) {\n      return digits / 100;\n    }\n\n    return digits;\n  }\n\n  return 0;\n}\nexport function numberFromString(input) {\n  const match = input.match(/\\d?\\.?\\d+/);\n  return match ? Number(match[0]) : undefined;\n}","map":{"version":3,"mappings":"AAAA,OAAM,SAAUA,KAAV,CAAgBC,KAAhB,EAA+BC,CAA/B,EAA0CC,CAA1C,EAAmD;AACrD,QAAMC,GAAG,GAAGC,IAAI,CAACD,GAAL,CAASF,CAAT,EAAYC,CAAZ,CAAZ;AACA,QAAMG,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASJ,CAAT,EAAYC,CAAZ,CAAZ;;AACA,MAAIF,KAAK,GAAGG,GAAZ,EAAiB;AACbH,SAAK,GAAGG,GAAR;AACH;;AACD,MAAIH,KAAK,GAAGK,GAAZ,EAAiB;AACbL,SAAK,GAAGK,GAAR;AACH;;AACD,SAAOL,KAAP;AACH,C,CACD;;AACA,OAAM,SAAUM,QAAV,CAAmBN,KAAnB,EAAkCO,MAAlC,EAAoDC,MAApD,EAAmF;AAAA,MAAbC,KAAa,uEAAL,KAAK;AACrF,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBJ,MAA5B;AACA,QAAM,CAACK,KAAD,EAAQC,MAAR,IAAkBL,MAAxB;AACA,QAAMM,MAAM,GAAGF,KAAK,GAAI,CAACZ,KAAK,GAAGU,OAAT,KAAqBC,QAAQ,GAAGD,OAAhC,CAAD,IAA8CG,MAAM,GAAGD,KAAvD,CAAvB;;AACA,MAAIH,KAAK,KAAK,IAAd,EAAoB;AAChB,QAAIG,KAAK,GAAGC,MAAZ,EAAoB;AAChB,UAAIC,MAAM,GAAGF,KAAb,EAAoB;AAChB,eAAOA,KAAP;AACH;;AACD,UAAIE,MAAM,GAAGD,MAAb,EAAqB;AACjB,eAAOA,MAAP;AACH;AACJ,KAPD,MAOO;AACH,UAAIC,MAAM,GAAGF,KAAb,EAAoB;AAChB,eAAOA,KAAP;AACH;;AACD,UAAIE,MAAM,GAAGD,MAAb,EAAqB;AACjB,eAAOA,MAAP;AACH;AACJ;AACJ;;AACD,SAAOC,MAAP;AACH;AAED,OAAM,SAAUC,SAAV,CAAoBf,KAApB,EAAiC;AACnC,SAAO,CAACgB,KAAK,CAAChB,KAAD,CAAN,IAAiBiB,QAAQ,CAACjB,KAAD,CAAhC;AACH;AAED,OAAM,SAAUkB,iBAAV,CAA4BC,GAA5B,EAAuC;AACzC,QAAMC,MAAM,GAAGC,gBAAgB,CAACF,GAAD,CAA/B;;AACA,MAAIC,MAAM,KAAKE,SAAf,EAA0B;AACtB,QAAIH,GAAG,CAACI,QAAJ,CAAa,GAAb,CAAJ,EAAuB;AACnB,aAAOH,MAAM,GAAG,GAAhB;AACH;;AACD,WAAOA,MAAP;AACH;;AACD,SAAO,CAAP;AACH;AACD,OAAM,SAAUC,gBAAV,CAA2BG,KAA3B,EAAwC;AAC1C,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAAN,CAAY,WAAZ,CAAd;AACA,SAAOA,KAAK,GAAGC,MAAM,CAACD,KAAK,CAAC,CAAD,CAAN,CAAT,GAAsBH,SAAlC;AACH","names":["clamp","value","a","b","min","Math","max","modulate","rangeA","rangeB","limit","fromLow","fromHigh","toLow","toHigh","result","isNumeric","isNaN","isFinite","percentToFraction","val","digits","numberFromString","undefined","includes","input","match","Number"],"sources":["../../../../src/render/types/Color/Utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}