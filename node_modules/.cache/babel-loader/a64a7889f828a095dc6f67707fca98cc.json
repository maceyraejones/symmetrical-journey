{"ast":null,"code":"import { hash as stringHash } from \"../../utils/string.js\";\nimport { ConvertColor } from \"../types/Color/ConvertColor.js\";\nimport { memoize } from \"../../utils/memoize.js\";\nconst CSSVariableRegExp = /var\\(.+\\)/;\nconst colorCache = new Map();\n\nfunction cachedMultiplyAlpha(s, a) {\n  const key = [s, a];\n\n  if (CSSVariableRegExp.test(s)) {\n    return s;\n  }\n\n  return memoize(1000, colorCache, key, () => ConvertColor.multiplyAlpha(s, a));\n}\n/**\n * @param alpha - is optional because SVGs define the alpha as a seperate property\n * @internal\n */\n\n\nexport function gradientColorStops(gradient) {\n  let alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let stops;\n\n  if (\"stops\" in gradient) {\n    stops = gradient.stops;\n  } else {\n    stops = [{\n      value: gradient.start,\n      position: 0\n    }, {\n      value: gradient.end,\n      position: 1\n    }];\n  }\n\n  if (alpha === 1) {\n    return stops;\n  } else {\n    return stops.map(stop => ({ ...stop,\n      value: cachedMultiplyAlpha(stop.value, alpha)\n    }));\n  }\n}\nexport function gradientColorStopsHash(gradient, alpha) {\n  let result = 0;\n  gradientColorStops(gradient, alpha).forEach(stop => {\n    result ^= stringHash(stop.value) ^ stop.position;\n  });\n  return result;\n}","map":{"version":3,"mappings":"AAAA,SAASA,IAAI,IAAIC,UAAjB,QAAmC,uBAAnC;AACA,SAASC,YAAT,QAA6B,gCAA7B;AAIA,SAASC,OAAT,QAAwB,wBAAxB;AAEA,MAAMC,iBAAiB,GAAG,WAA1B;AAEA,MAAMC,UAAU,GAAG,IAAIC,GAAJ,EAAnB;;AACA,SAASC,mBAAT,CAA6BC,CAA7B,EAAwCC,CAAxC,EAAiD;AAC7C,QAAMC,GAAG,GAAqB,CAACF,CAAD,EAAIC,CAAJ,CAA9B;;AACA,MAAIL,iBAAiB,CAACO,IAAlB,CAAuBH,CAAvB,CAAJ,EAA+B;AAC3B,WAAOA,CAAP;AACH;;AACD,SAAOL,OAAO,CAAC,IAAD,EAAOE,UAAP,EAAmBK,GAAnB,EAAwB,MAAMR,YAAY,CAACU,aAAb,CAA2BJ,CAA3B,EAA8BC,CAA9B,CAA9B,CAAd;AACH;AAED;;;;;;AAIA,OAAM,SAAUI,kBAAV,CACFC,QADE,EAEO;AAAA,MAATC,KAAS,uEAAD,CAAC;AAET,MAAIC,KAAJ;;AACA,MAAI,WAAWF,QAAf,EAAyB;AACrBE,SAAK,GAAGF,QAAQ,CAACE,KAAjB;AACH,GAFD,MAEO;AACHA,SAAK,GAAG,CACJ;AAAEC,WAAK,EAAEH,QAAQ,CAACI,KAAlB;AAAyBC,cAAQ,EAAE;AAAnC,KADI,EAEJ;AAAEF,WAAK,EAAEH,QAAQ,CAACM,GAAlB;AAAuBD,cAAQ,EAAE;AAAjC,KAFI,CAAR;AAIH;;AAED,MAAIJ,KAAK,KAAK,CAAd,EAAiB;AACb,WAAOC,KAAP;AACH,GAFD,MAEO;AACH,WAAOA,KAAK,CAACK,GAAN,CAAUC,IAAI,KAAK,EAAE,GAAGA,IAAL;AAAWL,WAAK,EAAEV,mBAAmB,CAACe,IAAI,CAACL,KAAN,EAAaF,KAAb;AAArC,KAAL,CAAd,CAAP;AACH;AACJ;AAED,OAAM,SAAUQ,sBAAV,CAAiCT,QAAjC,EAA+EC,KAA/E,EAA4F;AAC9F,MAAIS,MAAM,GAAG,CAAb;AACAX,oBAAkB,CAACC,QAAD,EAAWC,KAAX,CAAlB,CAAoCU,OAApC,CAA6CH,IAAD,IAA4B;AACpEE,UAAM,IAAIvB,UAAU,CAACqB,IAAI,CAACL,KAAN,CAAV,GAAyBK,IAAI,CAACH,QAAxC;AACH,GAFD;AAGA,SAAOK,MAAP;AACH","names":["hash","stringHash","ConvertColor","memoize","CSSVariableRegExp","colorCache","Map","cachedMultiplyAlpha","s","a","key","test","multiplyAlpha","gradientColorStops","gradient","alpha","stops","value","start","position","end","map","stop","gradientColorStopsHash","result","forEach"],"sources":["../../../src/render/utils/gradientColorStops.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}