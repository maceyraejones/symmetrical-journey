{"ast":null,"code":"import * as React from \"react\";\nimport { useContext } from \"react\";\n/**\n * @internal\n */\n\nexport const NavigationContainerContext = React.createContext(true);\n/**\n * Used to know if a code component is a child of the current screen.\n * This can be useful for resetting timers or interactions that need to trigger on every navigation.\n * @public\n */\n\nexport function useIsInCurrentNavigationTarget() {\n  // isInCurrentNavigationTarget is `true` if the NavigationContainerContext at the root of each screen is the current screen.\n  const isInCurrentNavigationTarget = useContext(NavigationContainerContext);\n  return isInCurrentNavigationTarget;\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AAEA;;;;AAGA,OAAO,MAAMC,0BAA0B,GAAGF,KAAK,CAACG,aAAN,CAA6B,IAA7B,CAAnC;AAEP;;;;;;AAKA,OAAM,SAAUC,8BAAV,GAAwC;AAC1C;AACA,QAAMC,2BAA2B,GAAGJ,UAAU,CAACC,0BAAD,CAA9C;AAEA,SAAOG,2BAAP;AACH","names":["React","useContext","NavigationContainerContext","createContext","useIsInCurrentNavigationTarget","isInCurrentNavigationTarget"],"sources":["../../src/components/NavigationContainerContext.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}