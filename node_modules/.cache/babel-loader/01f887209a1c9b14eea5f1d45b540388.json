{"ast":null,"code":"// used to generate id's and links to ids, they are stable per key, but only on runtime\nconst keys = new Map();\n/** @internal */\n\nexport class InternalID {\n  id;\n  _link = null;\n  _urllink = null;\n\n  constructor(id) {\n    this.id = id;\n  }\n\n  add(str) {\n    return InternalID.forKey(this.id + str);\n  }\n\n  toString() {\n    return this.id;\n  }\n\n  get link() {\n    const res = this._link;\n    if (res) return res;\n    return this._link = \"#\" + this.id;\n  }\n\n  get urlLink() {\n    const res = this._urllink;\n    if (res) return res;\n    return this._urllink = \"url(#\" + this.id + \")\";\n  }\n\n  static forKey(key) {\n    let res = keys.get(key);\n    if (res) return res;\n    res = new InternalID(\"a\" + (1000 + keys.size) + \"z\");\n    keys.set(key, res);\n    return res;\n  }\n\n}","map":{"version":3,"mappings":"AAAA;AAEA,MAAMA,IAAI,GAAG,IAAIC,GAAJ,EAAb;AAEA;;AACA,OAAM,MAAOC,UAAP,CAAiB;AAIAC;AAHXC,OAAK,GAAkB,IAAlB;AACLC,UAAQ,GAAkB,IAAlB;;AAEhBC,cAAmBH,EAAnB,EAA6B;AAAV;AAAc;;AAEjCI,KAAG,CAACC,GAAD,EAAY;AACX,WAAON,UAAU,CAACO,MAAX,CAAkB,KAAKN,EAAL,GAAUK,GAA5B,CAAP;AACH;;AAEDE,UAAQ;AACJ,WAAO,KAAKP,EAAZ;AACH;;AAEO,MAAJQ,IAAI;AACJ,UAAMC,GAAG,GAAG,KAAKR,KAAjB;AACA,QAAIQ,GAAJ,EAAS,OAAOA,GAAP;AACT,WAAQ,KAAKR,KAAL,GAAa,MAAM,KAAKD,EAAhC;AACH;;AACU,MAAPU,OAAO;AACP,UAAMD,GAAG,GAAG,KAAKP,QAAjB;AACA,QAAIO,GAAJ,EAAS,OAAOA,GAAP;AACT,WAAQ,KAAKP,QAAL,GAAgB,UAAU,KAAKF,EAAf,GAAoB,GAA5C;AACH;;AACY,SAANM,MAAM,CAACK,GAAD,EAAY;AACrB,QAAIF,GAAG,GAAGZ,IAAI,CAACe,GAAL,CAASD,GAAT,CAAV;AACA,QAAIF,GAAJ,EAAS,OAAOA,GAAP;AACTA,OAAG,GAAG,IAAIV,UAAJ,CAAe,OAAO,OAAOF,IAAI,CAACgB,IAAnB,IAA2B,GAA1C,CAAN;AACAhB,QAAI,CAACiB,GAAL,CAASH,GAAT,EAAcF,GAAd;AACA,WAAOA,GAAP;AACH;;AA9BkB","names":["keys","Map","InternalID","id","_link","_urllink","constructor","add","str","forKey","toString","link","res","urlLink","key","get","size","set"],"sources":["../../src/utils/internalId.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}