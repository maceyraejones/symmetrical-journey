{"ast":null,"code":"import { RenderTarget } from \"../types/RenderEnvironment.js\";\nimport { roundedNumberString } from \"../utils/roundedNumber.js\";\nimport { isFiniteNumber } from \"../utils/isFiniteNumber.js\";\nimport { PathSegment } from \"../types/PathSegment.js\";\nconst key = \"pathSegments\";\n/**\n * @internal\n */\n\nexport function withPath(target) {\n  return key in target;\n}\n/**\n * @internal\n */\n\nexport const pathDefaults = {\n  pathSegments: [],\n  pathClosed: false\n};\n/**\n * @internal\n */\n\nexport function toSVGPath(withPaths) {\n  let translate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    x: 0,\n    y: 0\n  };\n  let canvasMode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : RenderTarget.canvas;\n  let pathElements = [];\n  let paths = [];\n\n  if (Array.isArray(withPaths)) {\n    paths = withPaths;\n  } else {\n    paths = [withPaths];\n  }\n\n  paths.forEach((path, index) => {\n    const {\n      pathClosed,\n      pathSegments\n    } = path;\n    const segmentCount = pathSegments.length;\n    if (segmentCount === 0) return \"\";\n\n    for (let i = 0; i < segmentCount; i++) {\n      const segment = pathSegments[i];\n      let nextSegment;\n      let prevSegment;\n      const isFirstSegment = i === 0;\n      const isLastSegment = i === segmentCount - 1;\n\n      if (!isLastSegment) {\n        nextSegment = pathSegments[i + 1];\n      } else if (pathClosed) {\n        nextSegment = pathSegments[0];\n      }\n\n      if (!isFirstSegment) {\n        prevSegment = pathSegments[i - 1];\n      } else if (pathClosed) {\n        prevSegment = pathSegments[segmentCount - 1];\n      }\n\n      if (i === 0) {\n        pathElements.push(\"M\");\n      } else if (prevSegment && isStraightCurve(prevSegment, segment)) {\n        pathElements.push(\"L\");\n      }\n\n      pathElements.push(segment.x + translate.x, segment.y + translate.y);\n\n      if (nextSegment && !isStraightCurve(segment, nextSegment)) {\n        const handleOut = PathSegment.calculatedHandleOut(segment);\n        const handleIn = PathSegment.calculatedHandleIn(nextSegment);\n        pathElements.push(\"C\", handleOut.x + translate.x, handleOut.y + translate.y, handleIn.x + translate.x, handleIn.y + translate.y);\n      }\n\n      if (isLastSegment && nextSegment) {\n        if (isStraightCurve(segment, nextSegment)) {\n          pathElements.push(\"Z\");\n        } else {\n          pathElements.push(nextSegment.x + translate.x, nextSegment.y + translate.y, \"Z\");\n        }\n      }\n    }\n  });\n\n  if (canvasMode === RenderTarget.export || canvasMode === RenderTarget.preview) {\n    pathElements = pathElements.map(value => isFiniteNumber(value) ? roundedNumberString(value, 3) : value);\n  }\n\n  return pathElements.join(\" \");\n}\n/**\n * @internal\n */\n\nexport function isStraightCurve(fromSegment, toSegment) {\n  const fromStraight = fromSegment.handleMirroring === \"straight\" || fromSegment.handleOutX === 0 && fromSegment.handleOutY === 0;\n  const toStraight = toSegment.handleMirroring === \"straight\" || toSegment.handleInX === 0 && toSegment.handleInY === 0;\n  return fromStraight && toStraight;\n}","map":{"version":3,"mappings":"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","names":["RenderTarget","roundedNumberString","isFiniteNumber","PathSegment","key","withPath","target","pathDefaults","pathSegments","pathClosed","toSVGPath","withPaths","translate","x","y","canvasMode","canvas","pathElements","paths","Array","isArray","forEach","path","index","segmentCount","length","i","segment","nextSegment","prevSegment","isFirstSegment","isLastSegment","push","isStraightCurve","handleOut","calculatedHandleOut","handleIn","calculatedHandleIn","export","preview","map","value","join","fromSegment","toSegment","fromStraight","handleMirroring","handleOutX","handleOutY","toStraight","handleInX","handleInY"],"sources":["../../../src/render/traits/Path.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}