{"ast":null,"code":"import * as React from \"react\";\nimport { useConstant } from \"../components/utils/useConstant.js\";\nimport { useOnCurrentTargetChange } from \"../components/NavigationTargetContext.js\";\nconst modifierDefaults = {\n  altKey: false,\n  ctrlKey: false,\n  metaKey: false,\n  shiftKey: false\n};\n\nfunction createShortcutDefinition(shortcut) {\n  const keys = shortcut.split(\"+\");\n  const key = keys.pop();\n  if (!key) return undefined;\n  const modifiers = {};\n\n  for (const modifier of keys) {\n    modifiers[`${modifier}Key`] = true;\n  }\n\n  return { ...modifierDefaults,\n    ...modifiers,\n    key\n  };\n}\n/** @internal */\n\n\nexport function useHotkey(shortcut, callback) {\n  const inTarget = React.useRef(true);\n  const shortcutDefinition = useConstant(() => createShortcutDefinition(shortcut));\n  useOnCurrentTargetChange((isCurrentTarget, isOverlayed) => {\n    inTarget.current = isCurrentTarget && !isOverlayed;\n    return () => inTarget.current = false;\n  });\n  const eventHandler = React.useCallback(event => {\n    if (!shortcutDefinition) return;\n    if (!inTarget.current) return;\n    if (!Object.keys(shortcutDefinition).every(key => shortcutDefinition[key] === event[key])) return;\n    event.preventDefault();\n    callback();\n  }, [shortcutDefinition, callback]);\n  React.useEffect(() => {\n    document.addEventListener(\"keydown\", eventHandler);\n    return () => document.removeEventListener(\"keydown\", eventHandler);\n  }, [eventHandler]);\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,oCAA5B;AACA,SAASC,wBAAT,QAAyC,0CAAzC;AAcA,MAAMC,gBAAgB,GAAc;AAChCC,QAAM,EAAE,KADwB;AAEhCC,SAAO,EAAE,KAFuB;AAGhCC,SAAO,EAAE,KAHuB;AAIhCC,UAAQ,EAAE;AAJsB,CAApC;;AAOA,SAASC,wBAAT,CAAkCC,QAAlC,EAAkD;AAC9C,QAAMC,IAAI,GAAGD,QAAQ,CAACE,KAAT,CAAe,GAAf,CAAb;AACA,QAAMC,GAAG,GAAGF,IAAI,CAACG,GAAL,EAAZ;AAEA,MAAI,CAACD,GAAL,EAAU,OAAOE,SAAP;AAEV,QAAMC,SAAS,GAAuB,EAAtC;;AAEA,OAAK,MAAMC,QAAX,IAAuBN,IAAvB,EAA6B;AACzBK,aAAS,CAAC,GAAGC,QAAQ,KAAZ,CAAT,GAA8B,IAA9B;AACH;;AAED,SAAO,EACH,GAAGb,gBADA;AAEH,OAAGY,SAFA;AAGHH;AAHG,GAAP;AAKH;AAED;;;AACA,OAAM,SAAUK,SAAV,CAAoBR,QAApB,EAAsCS,QAAtC,EAA0D;AAC5D,QAAMC,QAAQ,GAAGnB,KAAK,CAACoB,MAAN,CAAsB,IAAtB,CAAjB;AACA,QAAMC,kBAAkB,GAAGpB,WAAW,CAAC,MAAMO,wBAAwB,CAACC,QAAD,CAA/B,CAAtC;AAEAP,0BAAwB,CAAC,CAACoB,eAAD,EAAkBC,WAAlB,KAAiC;AACtDJ,YAAQ,CAACK,OAAT,GAAmBF,eAAe,IAAI,CAACC,WAAvC;AACA,WAAO,MAAOJ,QAAQ,CAACK,OAAT,GAAmB,KAAjC;AACH,GAHuB,CAAxB;AAKA,QAAMC,YAAY,GAAGzB,KAAK,CAAC0B,WAAN,CAChBC,KAAD,IAAyB;AACrB,QAAI,CAACN,kBAAL,EAAyB;AACzB,QAAI,CAACF,QAAQ,CAACK,OAAd,EAAuB;AACvB,QAAI,CAACI,MAAM,CAAClB,IAAP,CAAYW,kBAAZ,EAAgCQ,KAAhC,CAAsCjB,GAAG,IAAIS,kBAAkB,CAACT,GAAD,CAAlB,KAA4Be,KAAK,CAACf,GAAD,CAA9E,CAAL,EAA2F;AAE3Fe,SAAK,CAACG,cAAN;AACAZ,YAAQ;AACX,GARgB,EASjB,CAACG,kBAAD,EAAqBH,QAArB,CATiB,CAArB;AAYAlB,OAAK,CAAC+B,SAAN,CAAgB,MAAK;AACjBC,YAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCR,YAArC;AACA,WAAO,MAAMO,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCT,YAAxC,CAAb;AACH,GAHD,EAGG,CAACA,YAAD,CAHH;AAIH","names":["React","useConstant","useOnCurrentTargetChange","modifierDefaults","altKey","ctrlKey","metaKey","shiftKey","createShortcutDefinition","shortcut","keys","split","key","pop","undefined","modifiers","modifier","useHotkey","callback","inTarget","useRef","shortcutDefinition","isCurrentTarget","isOverlayed","current","eventHandler","useCallback","event","Object","every","preventDefault","useEffect","document","addEventListener","removeEventListener"],"sources":["../../src/modules/useHotkey.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}