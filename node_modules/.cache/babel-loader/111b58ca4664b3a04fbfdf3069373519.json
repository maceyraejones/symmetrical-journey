{"ast":null,"code":"/**\n * @public\n */\nfunction Size(width, height) {\n  return {\n    width,\n    height\n  };\n}\n/**\n * @public\n */\n\n\n(function (Size) {\n  /**\n   * @param sizeA -\n   * @param sizeB -\n   * @alpha\n   */\n  Size.equals = (sizeA, sizeB) => {\n    if (sizeA === sizeB) return true;\n    if (!sizeA || !sizeB) return false;\n    return sizeA.width === sizeB.width && sizeA.height === sizeB.height;\n  };\n  /**\n   *\n   * @param fromSize - The initial size\n   * @param toSize - The size to update to\n   * @param keepAspectRatio - If the updating should preserve the aspect ratio\n   * @remarks\n   * keepAspectRatio only works if passing a toSize with only a width or height\n   * @alpha\n   */\n\n\n  Size.update = function (fromSize, toSize) {\n    let keepAspectRatio = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let {\n      width,\n      height\n    } = fromSize;\n    const sizeRatio = width / height; // Update from partial\n\n    width = toSize.width !== undefined ? toSize.width : width;\n    height = toSize.height !== undefined ? toSize.height : height; // Overwrite if we want and can keep the aspect ratio\n\n    if (keepAspectRatio) {\n      if (toSize.width === undefined && toSize.height !== undefined) {\n        width = toSize.height * sizeRatio;\n      }\n\n      if (toSize.width !== undefined && toSize.height === undefined && sizeRatio !== 0) {\n        height = toSize.width / sizeRatio;\n      }\n    }\n\n    return {\n      width,\n      height\n    };\n  };\n  /**\n   *\n   * @param sizeA -\n   * @param sizeB -\n   * @alpha\n   */\n\n\n  function subtract(sizeA, sizeB) {\n    return {\n      width: Math.max(0, sizeA.width - sizeB.width),\n      height: Math.max(0, sizeA.height - sizeB.height)\n    };\n  }\n\n  Size.subtract = subtract;\n  /**\n   * @public\n   */\n\n  Size.zero = Size(0, 0);\n  /**\n   * Checks if the size has a zero width and zero height\n   * @param size - size to check\n   * @public\n   */\n\n  Size.isZero = function (size) {\n    return size === Size.zero || size.width === 0 && size.height === 0;\n  };\n  /**\n   * @param width -\n   * @param height -\n   * @param size -\n   * @alpha\n   */\n\n\n  Size.defaultIfZero = function (width, height, size) {\n    if (Size.isZero(size)) {\n      return Size(width, height);\n    } // else\n\n\n    return size;\n  };\n})(Size || (Size = {}));\n\nexport { Size };","map":{"version":3,"mappings":"AAQA;;;AAGA,SAASA,IAAT,CAAcC,KAAd,EAA6BC,MAA7B,EAA2C;AACvC,SAAO;AAAED,SAAF;AAASC;AAAT,GAAP;AACH;AAED;;;;;AAGA,WAAUF,IAAV,EAAc;AACV;;;;;AAKaA,gBAAS,CAACG,KAAD,EAAqBC,KAArB,KAA2C;AAC7D,QAAID,KAAK,KAAKC,KAAd,EAAqB,OAAO,IAAP;AACrB,QAAI,CAACD,KAAD,IAAU,CAACC,KAAf,EAAsB,OAAO,KAAP;AACtB,WAAOD,KAAK,CAACF,KAAN,KAAgBG,KAAK,CAACH,KAAtB,IAA+BE,KAAK,CAACD,MAAN,KAAiBE,KAAK,CAACF,MAA7D;AACH,GAJY;AAMb;;;;;;;;;;;AASaF,gBAAS,UAACK,QAAD,EAAiBC,MAAjB,EAAmE;AAAA,QAA3BC,eAA2B,uEAAT,KAAS;AACrF,QAAI;AAAEN,WAAF;AAASC;AAAT,QAAoBG,QAAxB;AACA,UAAMG,SAAS,GAAGP,KAAK,GAAGC,MAA1B,CAFqF,CAIrF;;AACAD,SAAK,GAAGK,MAAM,CAACL,KAAP,KAAiBQ,SAAjB,GAA6BH,MAAM,CAACL,KAApC,GAA4CA,KAApD;AACAC,UAAM,GAAGI,MAAM,CAACJ,MAAP,KAAkBO,SAAlB,GAA8BH,MAAM,CAACJ,MAArC,GAA8CA,MAAvD,CANqF,CAQrF;;AACA,QAAIK,eAAJ,EAAqB;AACjB,UAAID,MAAM,CAACL,KAAP,KAAiBQ,SAAjB,IAA8BH,MAAM,CAACJ,MAAP,KAAkBO,SAApD,EAA+D;AAC3DR,aAAK,GAAGK,MAAM,CAACJ,MAAP,GAAgBM,SAAxB;AACH;;AACD,UAAIF,MAAM,CAACL,KAAP,KAAiBQ,SAAjB,IAA8BH,MAAM,CAACJ,MAAP,KAAkBO,SAAhD,IAA6DD,SAAS,KAAK,CAA/E,EAAkF;AAC9EN,cAAM,GAAGI,MAAM,CAACL,KAAP,GAAeO,SAAxB;AACH;AACJ;;AAED,WAAO;AAAEP,WAAF;AAASC;AAAT,KAAP;AACH,GAnBY;AAqBb;;;;;;;;AAMA,WAAgBQ,QAAhB,CAAyBP,KAAzB,EAAsCC,KAAtC,EAAiD;AAC7C,WAAO;AACHH,WAAK,EAAEU,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYT,KAAK,CAACF,KAAN,GAAcG,KAAK,CAACH,KAAhC,CADJ;AAEHC,YAAM,EAAES,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYT,KAAK,CAACD,MAAN,GAAeE,KAAK,CAACF,MAAjC;AAFL,KAAP;AAIH;;AALeF,kBAAQU,QAAR;AAOhB;;;;AAGaV,cAAOA,IAAI,CAAC,CAAD,EAAI,CAAJ,CAAX;AAEb;;;;;;AAKaA,gBAAS,UAAUa,IAAV,EAAoB;AACtC,WAAOA,IAAI,KAAKb,IAAI,CAACc,IAAd,IAAuBD,IAAI,CAACZ,KAAL,KAAe,CAAf,IAAoBY,IAAI,CAACX,MAAL,KAAgB,CAAlE;AACH,GAFY;AAIb;;;;;;;;AAMaF,uBAAgB,UAAUC,KAAV,EAAyBC,MAAzB,EAAyCW,IAAzC,EAAmD;AAC5E,QAAIb,YAAOa,IAAP,CAAJ,EAAkB;AACd,aAAOb,IAAI,CAACC,KAAD,EAAQC,MAAR,CAAX;AACH,KAH2E,CAG1E;;;AACF,WAAOW,IAAP;AACH,GALY;AAMhB,CAjFD,EAAUb,IAAI,KAAJA,IAAI,MAAd;;AAmFA,SAASA,IAAT","names":["Size","width","height","sizeA","sizeB","fromSize","toSize","keepAspectRatio","sizeRatio","undefined","subtract","Math","max","size","zero"],"sources":["../../../src/render/types/Size.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}