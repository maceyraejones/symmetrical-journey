{"ast":null,"code":"// rules-of-hooks is disabled for this file so that we avoid calling pointless\n// useEffects on the framer canvas.\n\n/* eslint-disable react-hooks/rules-of-hooks */\nimport * as React from \"react\";\nimport { useIsOnFramerCanvas } from \"./useIsOnFramerCanvas.js\";\nimport { useOnCurrentTargetChange } from \"../components/NavigationTargetContext.js\";\n\nfunction callbackForVariant(map, variant) {\n  if (map[variant]) return map[variant];\n  if (variant in map) return undefined;\n  return map.default;\n}\n/**\n * Executes a callback when the base variant changes. Events will not be\n * executed on the Framer canvas.\n *\n * @public\n */\n\n\nexport function useOnVariantChange(variant, callbackMap) {\n  const isOnFramerCanvas = useIsOnFramerCanvas();\n  if (isOnFramerCanvas) return;\n  const isActiveScreenRef = React.useRef(true);\n  useOnCurrentTargetChange((isCurrent, isOverlayed) => {\n    const isActiveScreen = isCurrent && !isOverlayed;\n\n    if (!isActiveScreenRef.current && isActiveScreen) {\n      const callback = callbackForVariant(callbackMap, variant);\n      if (callback) callback();\n    }\n\n    isActiveScreenRef.current = isActiveScreen;\n  }, [callbackMap]);\n  React.useEffect(() => {\n    if (isActiveScreenRef.current) {\n      const callback = callbackForVariant(callbackMap, variant);\n      if (callback) callback();\n    }\n  }, [variant, callbackMap]);\n}\n/**\n * A simplified version of useOnVariantChange, that takes a single callback,\n * cancelling it only if the navigation target changes.\n *\n * @internal\n */\n\nexport function useOnAppear(callback) {\n  useOnVariantChange(\"default\", {\n    default: callback\n  });\n}","map":{"version":3,"mappings":"AAAA;AACA;;AACA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,0CAAzC;;AAGA,SAASC,kBAAT,CAA4BC,GAA5B,EAA8CC,OAA9C,EAA6D;AACzD,MAAID,GAAG,CAACC,OAAD,CAAP,EAAkB,OAAOD,GAAG,CAACC,OAAD,CAAV;AAClB,MAAIA,OAAO,IAAID,GAAf,EAAoB,OAAOE,SAAP;AACpB,SAAOF,GAAG,CAACG,OAAX;AACH;AAED;;;;;;;;AAMA,OAAM,SAAUC,kBAAV,CAA6BH,OAA7B,EAA8CI,WAA9C,EAAsE;AACxE,QAAMC,gBAAgB,GAAGT,mBAAmB,EAA5C;AACA,MAAIS,gBAAJ,EAAsB;AAEtB,QAAMC,iBAAiB,GAAGX,KAAK,CAACY,MAAN,CAAa,IAAb,CAA1B;AAEAV,0BAAwB,CACpB,CAACW,SAAD,EAAYC,WAAZ,KAA2B;AACvB,UAAMC,cAAc,GAAGF,SAAS,IAAI,CAACC,WAArC;;AACA,QAAI,CAACH,iBAAiB,CAACK,OAAnB,IAA8BD,cAAlC,EAAkD;AAC9C,YAAME,QAAQ,GAAGd,kBAAkB,CAACM,WAAD,EAAcJ,OAAd,CAAnC;AACA,UAAIY,QAAJ,EAAcA,QAAQ;AACzB;;AACDN,qBAAiB,CAACK,OAAlB,GAA4BD,cAA5B;AACH,GARmB,EASpB,CAACN,WAAD,CAToB,CAAxB;AAYAT,OAAK,CAACkB,SAAN,CAAgB,MAAK;AACjB,QAAIP,iBAAiB,CAACK,OAAtB,EAA+B;AAC3B,YAAMC,QAAQ,GAAGd,kBAAkB,CAACM,WAAD,EAAcJ,OAAd,CAAnC;AACA,UAAIY,QAAJ,EAAcA,QAAQ;AACzB;AACJ,GALD,EAKG,CAACZ,OAAD,EAAUI,WAAV,CALH;AAMH;AAED;;;;;;;AAMA,OAAM,SAAUU,WAAV,CAAsBF,QAAtB,EAA0C;AAC5CT,oBAAkB,CAAC,SAAD,EAAY;AAAED,WAAO,EAAEU;AAAX,GAAZ,CAAlB;AACH","names":["React","useIsOnFramerCanvas","useOnCurrentTargetChange","callbackForVariant","map","variant","undefined","default","useOnVariantChange","callbackMap","isOnFramerCanvas","isActiveScreenRef","useRef","isCurrent","isOverlayed","isActiveScreen","current","callback","useEffect","useOnAppear"],"sources":["../../src/modules/useOnVariantChange.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}