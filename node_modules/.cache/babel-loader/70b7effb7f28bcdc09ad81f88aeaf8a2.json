{"ast":null,"code":"import { useContext } from \"react\";\nimport { RenderTarget } from \"../types/RenderEnvironment.js\";\nimport { runtime } from \"../../utils/runtimeInjection.js\";\nimport { nodeIdFromString } from \"./nodeIdFromString.js\";\nimport { ComponentContainerContext } from \"../presentation/ComponentContainerContext.js\";\nimport { getMeasurableCodeComponentChildren } from \"./getMeasurableCodeComponentChildren.js\";\nimport { useIsomorphicLayoutEffect } from \"../../useIsomorphicLayoutEffect.js\";\n/**\n * Adds the element and its children to the layout measure queue\n *\n * @internal\n */\n\nexport function useMeasureLayout(props, ref) {\n  let getChildren = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : () => [];\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const {\n    id,\n    visible,\n    _needsMeasure\n  } = props;\n  const {\n    skipHook = false\n  } = options;\n  const inCodeComponent = Boolean(useContext(ComponentContainerContext));\n  const onCanvas = RenderTarget.current() === RenderTarget.canvas;\n  useIsomorphicLayoutEffect(() => {\n    // must be on the canvas, not in a code component, and must not be\n    // explicitly skipped through skipHook\n    if (!onCanvas || inCodeComponent || skipHook) {\n      return;\n    } // must have a valid ref, id, be visible and need measure\n\n\n    if (!(ref.current && id && visible && _needsMeasure)) {\n      return;\n    }\n\n    runtime.queueMeasureRequest(nodeIdFromString(id), ref.current, getChildren(ref.current));\n  });\n}\n/**\n * Attempts to find the closest component container ancestor to a reference\n * element, and add a layout measure request for it. Used when an element inside\n * a code component has caused a layout shift outside of the normal render loop\n * (such as when fonts load), and needs to trigger a re-measure of its container.\n *\n * @param element\n * @internal\n */\n\nexport function measureClosestComponentContainer(element) {\n  const container = element.closest(\"[data-framer-component-container]\");\n  if (!container) return;\n  runtime.queueMeasureRequest(nodeIdFromString(container.id), container, getMeasurableCodeComponentChildren(container));\n}","map":{"version":3,"mappings":"AAAA,SAASA,UAAT,QAAsC,OAAtC;AAEA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,OAAT,QAAwB,iCAAxB;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,SAASC,yBAAT,QAA0C,8CAA1C;AACA,SAASC,kCAAT,QAAmD,yCAAnD;AACA,SAASC,yBAAT,QAA0C,oCAA1C;AAQA;;;;;;AAKA,OAAM,SAAUC,gBAAV,CACFC,KADE,EAEFC,GAFE,EAIkC;AAAA,MADpCC,WACoC,uEADP,MAAM,EACC;AAAA,MAApCC,OAAoC,uEAAF,EAAE;AAEpC,QAAM;AAAEC,MAAF;AAAMC,WAAN;AAAeC;AAAf,MAAiCN,KAAvC;AACA,QAAM;AAAEO,YAAQ,GAAG;AAAb,MAAuBJ,OAA7B;AACA,QAAMK,eAAe,GAAGC,OAAO,CAACjB,UAAU,CAACI,yBAAD,CAAX,CAA/B;AACA,QAAMc,QAAQ,GAAGjB,YAAY,CAACkB,OAAb,OAA2BlB,YAAY,CAACmB,MAAzD;AAEAd,2BAAyB,CAAC,MAAK;AAC3B;AACA;AACA,QAAI,CAACY,QAAD,IAAaF,eAAb,IAAgCD,QAApC,EAA8C;AAC1C;AACH,KAL0B,CAO3B;;;AACA,QAAI,EAAEN,GAAG,CAACU,OAAJ,IAAeP,EAAf,IAAqBC,OAArB,IAAgCC,aAAlC,CAAJ,EAAsD;AAClD;AACH;;AAEDZ,WAAO,CAACmB,mBAAR,CAA4BlB,gBAAgB,CAACS,EAAD,CAA5C,EAAkDH,GAAG,CAACU,OAAtD,EAA+DT,WAAW,CAACD,GAAG,CAACU,OAAL,CAA1E;AACH,GAbwB,CAAzB;AAcH;AAED;;;;;;;;;;AASA,OAAM,SAAUG,gCAAV,CAA2CC,OAA3C,EAA2D;AAC7D,QAAMC,SAAS,GAAGD,OAAO,CAACE,OAAR,CAAgB,mCAAhB,CAAlB;AACA,MAAI,CAACD,SAAL,EAAgB;AAEhBtB,SAAO,CAACmB,mBAAR,CACIlB,gBAAgB,CAACqB,SAAS,CAACZ,EAAX,CADpB,EAEIY,SAFJ,EAGInB,kCAAkC,CAACmB,SAAD,CAHtC;AAKH","names":["useContext","RenderTarget","runtime","nodeIdFromString","ComponentContainerContext","getMeasurableCodeComponentChildren","useIsomorphicLayoutEffect","useMeasureLayout","props","ref","getChildren","options","id","visible","_needsMeasure","skipHook","inCodeComponent","Boolean","onCanvas","current","canvas","queueMeasureRequest","measureClosestComponentContainer","element","container","closest"],"sources":["../../../src/render/utils/useMeasureLayout.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}