{"ast":null,"code":"import process from \"process\";\nimport * as React from \"react\";\nimport { transformString } from \"../utils/transformString.js\";\nimport { Layer } from \"./Layer.js\";\nimport { SVGRoot } from \"./SVGRoot.js\";\nimport { transformValues } from \"../utils/createTransformValues.js\";\nimport { RenderTarget } from \"../types/RenderEnvironment.js\";\nimport { RenderEnvironment } from \"../types/RenderEnvironment.js\";\nimport { safeWindow } from \"../../utils/safeWindow.js\";\n/**\n * @internal\n */\n\nexport class VectorGroup extends Layer {\n  static defaultVectorGroupProps = {\n    name: undefined,\n    opacity: undefined,\n    visible: true,\n    x: 0,\n    y: 0,\n    rotation: 0,\n    width: 100,\n    height: 100,\n    targetName: undefined,\n    defaultName: \"\",\n    isRootVectorNode: false,\n    includeTransform: undefined,\n    frame: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 100\n    }\n  };\n  static defaultProps = { ...Layer.defaultProps,\n    ...VectorGroup.defaultVectorGroupProps\n  };\n\n  render() {\n    if (process.env.NODE_ENV !== \"production\" && safeWindow[\"perf\"]) safeWindow[\"perf\"].nodeRender();\n    const {\n      id,\n      name: nameProp,\n      opacity,\n      visible,\n      targetName,\n      defaultName,\n      children,\n      includeTransform,\n      x,\n      y,\n      width,\n      height,\n      rotation,\n      isRootVectorNode\n    } = this.props;\n    if (!visible) return null;\n    const {\n      target\n    } = RenderEnvironment;\n    const rect = {\n      x,\n      y,\n      width,\n      height\n    };\n    const transform = transformValues(rect, rotation, isRootVectorNode, includeTransform);\n    const addNames = target === RenderTarget.preview;\n    let name = undefined;\n\n    if (addNames) {\n      if (targetName) {\n        name = targetName;\n      } else if (nameProp) {\n        name = nameProp;\n      } else {\n        name = defaultName;\n      }\n    }\n\n    return this.renderElement(React.createElement(\"g\", {\n      transform: transformString(transform),\n      ...{\n        id,\n        name,\n        opacity\n      }\n    }, children));\n  }\n\n  renderElement(element) {\n    const {\n      isRootVectorNode,\n      width,\n      height,\n      frame,\n      willChangeTransform\n    } = this.props;\n    if (!isRootVectorNode) return element;\n    return React.createElement(SVGRoot, {\n      frame: frame,\n      width: width,\n      height: height,\n      willChangeTransform: willChangeTransform,\n      innerRef: this.setLayerElement\n    }, element);\n  }\n\n}","map":{"version":3,"mappings":"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","names":["process","React","transformString","Layer","SVGRoot","transformValues","RenderTarget","RenderEnvironment","safeWindow","VectorGroup","defaultVectorGroupProps","name","undefined","opacity","visible","x","y","rotation","width","height","targetName","defaultName","isRootVectorNode","includeTransform","frame","defaultProps","render","env","NODE_ENV","nodeRender","id","nameProp","children","props","target","rect","transform","addNames","preview","renderElement","element","willChangeTransform","innerRef","setLayerElement"],"sources":["../../../src/render/presentation/VectorGroup.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}