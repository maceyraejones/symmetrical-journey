{"ast":null,"code":"import * as React from \"react\";\nimport { fontStore } from \"./fontStore.js\";\n/**\n * @internal\n * Hook to subscribe to font store and get the current font loading status.\n * */\n\nexport function useFontLoadStatus() {\n  let fontSelectors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5000;\n  const missingFontSelectors = fontSelectors.filter(s => !fontStore.isSelectorLoaded(s));\n  const [fontLoadStatus, setFontLoadStatus] = React.useState(missingFontSelectors.length ? \"loading\" : \"done\"); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  React.useEffect(() => {\n    if (!missingFontSelectors.length) return;\n    setFontLoadStatus(\"loading\");\n    const timer = setTimeout(() => {\n      setFontLoadStatus(\"timeout\");\n    }, timeout);\n    fontStore.loadWebFontsFromSelectors(missingFontSelectors).then(() => {\n      clearTimeout(timer);\n      setFontLoadStatus(\"done\");\n    }); // This is a poor mans version of shallow equal both arrays\n    // We need both the used and the missing font selectors\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fontSelectors.join(\", \"), missingFontSelectors.join(\", \")]);\n  return fontLoadStatus;\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AAIA;;;;;AAIA,OAAM,SAAUC,iBAAV,GAAwE;AAAA,MAA5CC,aAA4C,uEAAlB,EAAkB;AAAA,MAAdC,OAAc,uEAAJ,IAAI;AAC1E,QAAMC,oBAAoB,GAAGF,aAAa,CAACG,MAAd,CAAqBC,CAAC,IAAI,CAACN,SAAS,CAACO,gBAAV,CAA2BD,CAA3B,CAA3B,CAA7B;AACA,QAAM,CAACE,cAAD,EAAiBC,iBAAjB,IAAsCV,KAAK,CAACW,QAAN,CACxCN,oBAAoB,CAACO,MAArB,GAA8B,SAA9B,GAA0C,MADF,CAA5C,CAF0E,CAM1E;;AACAZ,OAAK,CAACa,SAAN,CAAgB,MAAK;AACjB,QAAI,CAACR,oBAAoB,CAACO,MAA1B,EAAkC;AAElCF,qBAAiB,CAAC,SAAD,CAAjB;AAEA,UAAMI,KAAK,GAAGC,UAAU,CAAC,MAAK;AAC1BL,uBAAiB,CAAC,SAAD,CAAjB;AACH,KAFuB,EAErBN,OAFqB,CAAxB;AAIAH,aAAS,CAACe,yBAAV,CAAoCX,oBAApC,EAA0DY,IAA1D,CAA+D,MAAK;AAChEC,kBAAY,CAACJ,KAAD,CAAZ;AACAJ,uBAAiB,CAAC,MAAD,CAAjB;AACH,KAHD,EATiB,CAajB;AACA;AACA;AACH,GAhBD,EAgBG,CAACP,aAAa,CAACgB,IAAd,CAAmB,IAAnB,CAAD,EAA2Bd,oBAAoB,CAACc,IAArB,CAA0B,IAA1B,CAA3B,CAhBH;AAkBA,SAAOV,cAAP;AACH","names":["React","fontStore","useFontLoadStatus","fontSelectors","timeout","missingFontSelectors","filter","s","isSelectorLoaded","fontLoadStatus","setFontLoadStatus","useState","length","useEffect","timer","setTimeout","loadWebFontsFromSelectors","then","clearTimeout","join"],"sources":["../../../src/render/fonts/useFontLoadStatus.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}