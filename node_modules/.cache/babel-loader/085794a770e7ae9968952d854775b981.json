{"ast":null,"code":"/** @internal */\nexport function roundedNumber(value, decimals) {\n  const d = Math.round(Math.abs(decimals));\n  const multiplier = Math.pow(10, d);\n  return Math.round(value * multiplier) / multiplier;\n}\n/** @internal */\n\nexport function roundedNumberString(value, decimals) {\n  const result = value.toFixed(decimals);\n\n  if (decimals === 0) {\n    return result;\n  }\n\n  return result.replace(/\\.?0+$/, \"\");\n}\n/** @internal */\n\nexport function roundWithOffset(value, offset) {\n  if (offset === 0) {\n    return Math.round(value);\n  }\n\n  offset -= offset | 0; // Remove everything before the comma\n\n  if (offset < 0) {\n    offset = 1 - offset;\n  }\n\n  return Math.round(value - offset) + offset; // }\n}","map":{"version":3,"mappings":"AAAA;AACA,OAAM,SAAUA,aAAV,CAAwBC,KAAxB,EAAuCC,QAAvC,EAAuD;AACzD,QAAMC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASJ,QAAT,CAAX,CAAV;AACA,QAAMK,UAAU,GAAGH,IAAI,CAACI,GAAL,CAAS,EAAT,EAAaL,CAAb,CAAnB;AACA,SAAOC,IAAI,CAACC,KAAL,CAAWJ,KAAK,GAAGM,UAAnB,IAAiCA,UAAxC;AACH;AAED;;AACA,OAAM,SAAUE,mBAAV,CAA8BR,KAA9B,EAA6CC,QAA7C,EAA6D;AAC/D,QAAMQ,MAAM,GAAGT,KAAK,CAACU,OAAN,CAAcT,QAAd,CAAf;;AACA,MAAIA,QAAQ,KAAK,CAAjB,EAAoB;AAChB,WAAOQ,MAAP;AACH;;AACD,SAAOA,MAAM,CAACE,OAAP,CAAe,QAAf,EAAyB,EAAzB,CAAP;AACH;AAED;;AACA,OAAM,SAAUC,eAAV,CAA0BZ,KAA1B,EAAyCa,MAAzC,EAAuD;AACzD,MAAIA,MAAM,KAAK,CAAf,EAAkB;AACd,WAAOV,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAP;AACH;;AACDa,QAAM,IAAIA,MAAM,GAAG,CAAnB,CAJyD,CAIpC;;AACrB,MAAIA,MAAM,GAAG,CAAb,EAAgB;AACZA,UAAM,GAAG,IAAIA,MAAb;AACH;;AACD,SAAOV,IAAI,CAACC,KAAL,CAAWJ,KAAK,GAAGa,MAAnB,IAA6BA,MAApC,CARyD,CASzD;AACH","names":["roundedNumber","value","decimals","d","Math","round","abs","multiplier","pow","roundedNumberString","result","toFixed","replace","roundWithOffset","offset"],"sources":["../../../src/render/utils/roundedNumber.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}