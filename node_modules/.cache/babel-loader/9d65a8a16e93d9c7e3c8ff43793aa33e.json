{"ast":null,"code":"import * as React from \"react\";\nimport { motion } from \"framer-motion\";\n/** @internal */\n\nexport function collectBorderStyleForProps(props, style) {\n  let collapseEqualBorders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  const {\n    borderWidth,\n    borderStyle,\n    borderColor\n  } = props;\n\n  if (!borderWidth) {\n    return;\n  }\n\n  let borderTop;\n  let borderBottom;\n  let borderLeft;\n  let borderRight;\n\n  if (typeof borderWidth === \"number\") {\n    borderTop = borderBottom = borderLeft = borderRight = borderWidth;\n  } else {\n    borderTop = borderWidth.top || 0;\n    borderBottom = borderWidth.bottom || 0;\n    borderLeft = borderWidth.left || 0;\n    borderRight = borderWidth.right || 0;\n  }\n\n  if (borderTop === 0 && borderBottom === 0 && borderLeft === 0 && borderRight === 0) {\n    return;\n  } // Equal border\n\n\n  if (collapseEqualBorders && borderTop === borderBottom && borderTop === borderLeft && borderTop === borderRight) {\n    style.border = `${borderTop}px ${borderStyle} ${borderColor}`;\n    return;\n  }\n\n  style.borderStyle = props.borderStyle;\n  style.borderColor = props.borderColor;\n  style.borderTopWidth = `${borderTop}px`;\n  style.borderBottomWidth = `${borderBottom}px`;\n  style.borderLeftWidth = `${borderLeft}px`;\n  style.borderRightWidth = `${borderRight}px`;\n}\nexport function Border(props) {\n  const layoutId = props.layoutId ? `${props.layoutId}-border` : undefined;\n\n  if (!props.borderWidth) {\n    return null;\n  }\n\n  const style = {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    borderRadius: \"inherit\",\n    pointerEvents: \"none\"\n  };\n\n  if (props.border) {\n    ;\n    style.border = props.border;\n    return React.createElement(motion.div, {\n      style: style\n    });\n  }\n\n  collectBorderStyleForProps(props, style, false);\n  return React.createElement(motion.div, {\n    \"data-frame-border\": true,\n    style: style,\n    layoutId: layoutId\n  });\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAiD,eAAjD;AAYA;;AACA,OAAM,SAAUC,0BAAV,CACFC,KADE,EAEFC,KAFE,EAGkC;AAAA,MAApCC,oBAAoC,uEAAJ,IAAI;AAEpC,QAAM;AAAEC,eAAF;AAAeC,eAAf;AAA4BC;AAA5B,MAA4CL,KAAlD;;AACA,MAAI,CAACG,WAAL,EAAkB;AACd;AACH;;AACD,MAAIG,SAAJ;AACA,MAAIC,YAAJ;AACA,MAAIC,UAAJ;AACA,MAAIC,WAAJ;;AACA,MAAI,OAAON,WAAP,KAAuB,QAA3B,EAAqC;AACjCG,aAAS,GAAGC,YAAY,GAAGC,UAAU,GAAGC,WAAW,GAAGN,WAAtD;AACH,GAFD,MAEO;AACHG,aAAS,GAAGH,WAAW,CAACO,GAAZ,IAAmB,CAA/B;AACAH,gBAAY,GAAGJ,WAAW,CAACQ,MAAZ,IAAsB,CAArC;AACAH,cAAU,GAAGL,WAAW,CAACS,IAAZ,IAAoB,CAAjC;AACAH,eAAW,GAAGN,WAAW,CAACU,KAAZ,IAAqB,CAAnC;AACH;;AACD,MAAIP,SAAS,KAAK,CAAd,IAAmBC,YAAY,KAAK,CAApC,IAAyCC,UAAU,KAAK,CAAxD,IAA6DC,WAAW,KAAK,CAAjF,EAAoF;AAChF;AACH,GApBmC,CAsBpC;;;AACA,MAAIP,oBAAoB,IAAII,SAAS,KAAKC,YAAtC,IAAsDD,SAAS,KAAKE,UAApE,IAAkFF,SAAS,KAAKG,WAApG,EAAiH;AAC7GR,SAAK,CAACa,MAAN,GAAe,GAAGR,SAAS,MAAMF,WAAW,IAAIC,WAAW,EAA3D;AACA;AACH;;AAEDJ,OAAK,CAACG,WAAN,GAAoBJ,KAAK,CAACI,WAA1B;AACAH,OAAK,CAACI,WAAN,GAAoBL,KAAK,CAACK,WAA1B;AACAJ,OAAK,CAACc,cAAN,GAAuB,GAAGT,SAAS,IAAnC;AACAL,OAAK,CAACe,iBAAN,GAA0B,GAAGT,YAAY,IAAzC;AACAN,OAAK,CAACgB,eAAN,GAAwB,GAAGT,UAAU,IAArC;AACAP,OAAK,CAACiB,gBAAN,GAAyB,GAAGT,WAAW,IAAvC;AACH;AAED,OAAM,SAAUU,MAAV,CAAiBnB,KAAjB,EAAiD;AACnD,QAAMoB,QAAQ,GAAGpB,KAAK,CAACoB,QAAN,GAAiB,GAAGpB,KAAK,CAACoB,QAAQ,SAAlC,GAA8CC,SAA/D;;AAEA,MAAI,CAACrB,KAAK,CAACG,WAAX,EAAwB;AACpB,WAAO,IAAP;AACH;;AACD,QAAMF,KAAK,GAAwB;AAC/BqB,YAAQ,EAAE,UADqB;AAE/BV,QAAI,EAAE,CAFyB;AAG/BC,SAAK,EAAE,CAHwB;AAI/BH,OAAG,EAAE,CAJ0B;AAK/BC,UAAM,EAAE,CALuB;AAM/BY,gBAAY,EAAE,SANiB;AAO/BC,iBAAa,EAAE;AAPgB,GAAnC;;AAUA,MAAIxB,KAAK,CAACc,MAAV,EAAkB;AACd;AAAEb,SAAqB,CAACa,MAAtB,GAA+Bd,KAAK,CAACc,MAArC;AACF,WAAOjB,oBAACC,MAAM,CAAC2B,GAAR,EAAW;AAACxB,WAAK,EAAEA;AAAR,KAAX,CAAP;AACH;;AAEDF,4BAA0B,CAACC,KAAD,EAAQC,KAAR,EAAe,KAAf,CAA1B;AAEA,SAAOJ,oBAACC,MAAM,CAAC2B,GAAR,EAAW;AAAA;AAAmBxB,SAAK,EAAEA,KAA1B;AAAiCmB,YAAQ,EAAEA;AAA3C,GAAX,CAAP;AACH","names":["React","motion","collectBorderStyleForProps","props","style","collapseEqualBorders","borderWidth","borderStyle","borderColor","borderTop","borderBottom","borderLeft","borderRight","top","bottom","left","right","border","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","Border","layoutId","undefined","position","borderRadius","pointerEvents","div"],"sources":["../../../src/render/style/BorderComponent.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}