{"ast":null,"code":"const isFlexboxGapSupportedRef = {\n  result: null\n};\n/* @internal */\n\nexport function isFlexboxGapSupported() {\n  if (isFlexboxGapSupportedRef.result !== null) return isFlexboxGapSupportedRef.result; // Source: https://github.com/Modernizr/Modernizr/blob/master/feature-detects/css/flexgap.js\n  // create flex container with row-gap set\n\n  const flex = document.createElement(\"div\");\n  Object.assign(flex.style, {\n    position: \"absolute\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    rowGap: \"1px\"\n  }); // create two elements inside it\n\n  flex.appendChild(document.createElement(\"div\"));\n  flex.appendChild(document.createElement(\"div\")); // append to the DOM (needed to obtain scrollHeight)\n\n  document.body.appendChild(flex);\n  const isSupported = flex.scrollHeight === 1; // flex container should be 1px high from the row-gap\n\n  if (flex.parentNode) {\n    flex.parentNode.removeChild(flex);\n  }\n\n  isFlexboxGapSupportedRef.result = isSupported;\n  return isSupported;\n}","map":{"version":3,"mappings":"AAAA,MAAMA,wBAAwB,GAA+B;AAAEC,QAAM,EAAE;AAAV,CAA7D;AAEA;;AACA,OAAM,SAAUC,qBAAV,GAA+B;AACjC,MAAIF,wBAAwB,CAACC,MAAzB,KAAoC,IAAxC,EAA8C,OAAOD,wBAAwB,CAACC,MAAhC,CADb,CAGjC;AACA;;AACA,QAAME,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAb;AACAC,QAAM,CAACC,MAAP,CAAcJ,IAAI,CAACK,KAAnB,EAA0B;AACtBC,YAAQ,EAAE,UADY;AAEtBC,WAAO,EAAE,MAFa;AAGtBC,iBAAa,EAAE,QAHO;AAItBC,UAAM,EAAE;AAJc,GAA1B,EANiC,CAajC;;AACAT,MAAI,CAACU,WAAL,CAAiBT,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAjB;AACAF,MAAI,CAACU,WAAL,CAAiBT,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAjB,EAfiC,CAiBjC;;AACAD,UAAQ,CAACU,IAAT,CAAcD,WAAd,CAA0BV,IAA1B;AACA,QAAMY,WAAW,GAAGZ,IAAI,CAACa,YAAL,KAAsB,CAA1C,CAnBiC,CAmBW;;AAC5C,MAAIb,IAAI,CAACc,UAAT,EAAqB;AACjBd,QAAI,CAACc,UAAL,CAAgBC,WAAhB,CAA4Bf,IAA5B;AACH;;AACDH,0BAAwB,CAACC,MAAzB,GAAkCc,WAAlC;AACA,SAAOA,WAAP;AACH","names":["isFlexboxGapSupportedRef","result","isFlexboxGapSupported","flex","document","createElement","Object","assign","style","position","display","flexDirection","rowGap","appendChild","body","isSupported","scrollHeight","parentNode","removeChild"],"sources":["../../src/modules/isFlexboxGapSupported.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}