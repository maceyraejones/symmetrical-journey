{"ast":null,"code":"import { useIsOnFramerCanvas } from \"./useIsOnFramerCanvas.js\";\nimport { useRouter } from \"../router/index.js\";\n/**\n * A wrapper around the Router API to provide backwards compatibilty for\n * generated components that depend on the `useNavigate` export from \"framer\",\n * instead of the `useRoute` that is currently used\n *\n * @internal\n */\n\nexport function useNavigate() {\n  const {\n    navigate\n  } = useRouter();\n  const onCanvas = useIsOnFramerCanvas();\n  if (!navigate) return () => {};\n  return target => {\n    if (onCanvas) return;\n    navigate(target); // Return false to prevent smart components from proceeding with their event execution.\n\n    return false;\n  };\n}","map":{"version":3,"mappings":"AAAA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA;;;;;;;;AAOA,OAAM,SAAUC,WAAV,GAAqB;AACvB,QAAM;AAAEC;AAAF,MAAeF,SAAS,EAA9B;AACA,QAAMG,QAAQ,GAAGJ,mBAAmB,EAApC;AAEA,MAAI,CAACG,QAAL,EAAe,OAAO,MAAK,CAAG,CAAf;AAEf,SAAQE,MAAD,IAAmB;AACtB,QAAID,QAAJ,EAAc;AACdD,YAAQ,CAACE,MAAD,CAAR,CAFsB,CAGtB;;AACA,WAAO,KAAP;AACH,GALD;AAMH","names":["useIsOnFramerCanvas","useRouter","useNavigate","navigate","onCanvas","target"],"sources":["../../src/modules/useNavigate.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}