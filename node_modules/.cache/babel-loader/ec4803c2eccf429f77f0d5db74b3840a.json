{"ast":null,"code":"import * as CSS from \"./setDocumentStyles.js\";\nimport { RenderTarget } from \"../../render/types/RenderEnvironment.js\";\nimport { richTextLinkStyleRules } from \"./injectRichTextLinkStyles.js\";\nimport { flexboxGapNotSupportedClass } from \"../../modules/workaroundFlexboxGapNotSupported.js\";\nconst componentCSSRules = [`[data-framer-component-type] { position: absolute; }`]; // A note about text CSS. Older Framer projects generated text like this:\n//\n//     <div><!-- wrapper -->\n//       <div><!-- first line (\"block\" in DraftJS parlance) -->\n//         <span style=\"bold\">Hello </span><span>world</span><br>\n//       </div>\n//       <div><!-- second line, etc. --></div>\n//     </div>\n//\n// Newer projects generate text like this:\n//\n//     <span><!-- wrapper, can pick from span (default), p, h1-h6 -->\n//       <span><!-- first line (\"block\" in DraftJS parlance) -->\n//         <span style=\"bold\">Hello </span><span>world</span><br>\n//       </span>\n//       <span><!-- second line, etc. --></span>\n//     </span>\n//\n// All of this might further be wrapped in an <a>, e.g.:\n//\n//     <!-- after introducing semantic tags -->\n//     <a>\n//       <h1><!-- wrapper -->\n//         <span><!-- block -->\n//           <span style=\"bold\">Hello </span><span>world</span><br>\n//         </span>\n//       </h1>\n//     </a>\n//\n//     <!-- before introducing semantic tags -->\n//     <a><!-- is also the wrapper -->\n//       <div><!-- block -->\n//         <span style=\"bold\">Hello </span><span>world</span><br>\n//       </div>\n//     </a>\n//\n// And the inline spans can also be <a> instead, e.g.:\n//\n//     <span><!-- wrapper -->\n//       <span><!-- block -->\n//         <span style=\"bold\">Hello </span><a>world</a><br>\n//       </span>\n//     </span>\n//\n// The library CSS needs to support all of that.\n\nconst textAlignmentRule = `\n[data-framer-component-type=\"Text\"] > * {\n    text-align: var(--framer-text-alignment, start);\n}`;\nconst textBlockSpanRule = `\n[data-framer-component-type=\"Text\"] span span,\n[data-framer-component-type=\"Text\"] p span,\n[data-framer-component-type=\"Text\"] h1 span,\n[data-framer-component-type=\"Text\"] h2 span,\n[data-framer-component-type=\"Text\"] h3 span,\n[data-framer-component-type=\"Text\"] h4 span,\n[data-framer-component-type=\"Text\"] h5 span,\n[data-framer-component-type=\"Text\"] h6 span {\n    display: block;\n}`;\nconst textInlineSpanRule = `\n[data-framer-component-type=\"Text\"] span span span,\n[data-framer-component-type=\"Text\"] p span span,\n[data-framer-component-type=\"Text\"] h1 span span,\n[data-framer-component-type=\"Text\"] h2 span span,\n[data-framer-component-type=\"Text\"] h3 span span,\n[data-framer-component-type=\"Text\"] h4 span span,\n[data-framer-component-type=\"Text\"] h5 span span,\n[data-framer-component-type=\"Text\"] h6 span span {\n    display: unset;\n}`;\nconst renderTextStylesRule = `\n[data-framer-component-type=\"Text\"] div div span,\n[data-framer-component-type=\"Text\"] a div span,\n[data-framer-component-type=\"Text\"] span span span,\n[data-framer-component-type=\"Text\"] p span span,\n[data-framer-component-type=\"Text\"] h1 span span,\n[data-framer-component-type=\"Text\"] h2 span span,\n[data-framer-component-type=\"Text\"] h3 span span,\n[data-framer-component-type=\"Text\"] h4 span span,\n[data-framer-component-type=\"Text\"] h5 span span,\n[data-framer-component-type=\"Text\"] h6 span span,\n[data-framer-component-type=\"Text\"] a {\n    font-family: var(--font-family);\n    font-style: var(--font-style);\n    font-weight: min(calc(var(--framer-font-weight-increase, 0) + var(--font-weight, 400)), 900);\n    color: var(--text-color);\n    letter-spacing: var(--letter-spacing);\n    font-size: var(--font-size);\n    text-transform: var(--text-transform);\n    text-decoration: var(--text-decoration);\n    line-height: var(--line-height);\n}`;\nconst textStylesRule = `\n[data-framer-component-type=\"Text\"] div div span,\n[data-framer-component-type=\"Text\"] a div span,\n[data-framer-component-type=\"Text\"] span span span,\n[data-framer-component-type=\"Text\"] p span span,\n[data-framer-component-type=\"Text\"] h1 span span,\n[data-framer-component-type=\"Text\"] h2 span span,\n[data-framer-component-type=\"Text\"] h3 span span,\n[data-framer-component-type=\"Text\"] h4 span span,\n[data-framer-component-type=\"Text\"] h5 span span,\n[data-framer-component-type=\"Text\"] h6 span span,\n[data-framer-component-type=\"Text\"] a {\n    --font-family: var(--framer-font-family);\n    --font-style: var(--framer-font-style);\n    --font-weight: var(--framer-font-weight);\n    --text-color: var(--framer-text-color);\n    --letter-spacing: var(--framer-letter-spacing);\n    --font-size: var(--framer-font-size);\n    --text-transform: var(--framer-text-transform);\n    --text-decoration: var(--framer-text-decoration);\n    --line-height: var(--framer-line-height);\n}`;\nconst linkStylesRule = `\n[data-framer-component-type=\"Text\"] a,\n[data-framer-component-type=\"Text\"] a div span,\n[data-framer-component-type=\"Text\"] a span span span,\n[data-framer-component-type=\"Text\"] a p span span,\n[data-framer-component-type=\"Text\"] a h1 span span,\n[data-framer-component-type=\"Text\"] a h2 span span,\n[data-framer-component-type=\"Text\"] a h3 span span,\n[data-framer-component-type=\"Text\"] a h4 span span,\n[data-framer-component-type=\"Text\"] a h5 span span,\n[data-framer-component-type=\"Text\"] a h6 span span {\n    --font-family: var(--framer-link-font-family, var(--framer-font-family));\n    --font-style: var(--framer-link-font-style, var(--framer-font-style));\n    --font-weight: var(--framer-link-font-weight, var(--framer-font-weight));\n    --text-color: var(--framer-link-text-color, var(--framer-text-color));\n    --font-size: var(--framer-link-font-size, var(--framer-font-size));\n    --text-transform: var(--framer-link-text-transform, var(--framer-text-transform));\n    --text-decoration: var(--framer-link-text-decoration, var(--framer-text-decoration));\n}`;\nconst linkHoverStylesRule = `\n[data-framer-component-type=\"Text\"] a:hover,\n[data-framer-component-type=\"Text\"] a div span:hover,\n[data-framer-component-type=\"Text\"] a span span span:hover,\n[data-framer-component-type=\"Text\"] a p span span:hover,\n[data-framer-component-type=\"Text\"] a h1 span span:hover,\n[data-framer-component-type=\"Text\"] a h2 span span:hover,\n[data-framer-component-type=\"Text\"] a h3 span span:hover,\n[data-framer-component-type=\"Text\"] a h4 span span:hover,\n[data-framer-component-type=\"Text\"] a h5 span span:hover,\n[data-framer-component-type=\"Text\"] a h6 span span:hover {\n    --font-family: var(--framer-link-hover-font-family, var(--framer-link-font-family, var(--framer-font-family)));\n    --font-style: var(--framer-link-hover-font-style, var(--framer-link-font-style, var(--framer-font-style)));\n    --font-weight: var(--framer-link-hover-font-weight, var(--framer-link-font-weight, var(--framer-font-weight)));\n    --text-color: var(--framer-link-hover-text-color, var(--framer-link-text-color, var(--framer-text-color)));\n    --font-size: var(--framer-link-hover-font-size, var(--framer-link-font-size, var(--framer-font-size)));\n    --text-transform: var(--framer-link-hover-text-transform, var(--framer-link-text-transform, var(--framer-text-transform)));\n    --text-decoration: var(--framer-link-hover-text-decoration, var(--framer-link-text-decoration, var(--framer-text-decoration)));\n}`;\nconst linkCurrentStylesRule = `\n[data-framer-component-type=\"Text\"].isCurrent a,\n[data-framer-component-type=\"Text\"].isCurrent a div span,\n[data-framer-component-type=\"Text\"].isCurrent a span span span,\n[data-framer-component-type=\"Text\"].isCurrent a p span span,\n[data-framer-component-type=\"Text\"].isCurrent a h1 span span,\n[data-framer-component-type=\"Text\"].isCurrent a h2 span span,\n[data-framer-component-type=\"Text\"].isCurrent a h3 span span,\n[data-framer-component-type=\"Text\"].isCurrent a h4 span span,\n[data-framer-component-type=\"Text\"].isCurrent a h5 span span,\n[data-framer-component-type=\"Text\"].isCurrent a h6 span span {\n    --font-family: var(--framer-link-current-font-family, var(--framer-link-font-family, var(--framer-font-family)));\n    --font-style: var(--framer-link-current-font-style, var(--framer-link-font-style, var(--framer-font-style)));\n    --font-weight: var(--framer-link-current-font-weight, var(--framer-link-font-weight, var(--framer-font-weight)));\n    --text-color: var(--framer-link-current-text-color, var(--framer-link-text-color, var(--framer-text-color)));\n    --font-size: var(--framer-link-current-font-size, var(--framer-link-font-size, var(--framer-font-size)));\n    --text-transform: var(--framer-link-current-text-transform, var(--framer-link-text-transform, var(--framer-text-transform)));\n    --text-decoration: var(--framer-link-current-text-decoration, var(--framer-link-text-decoration, var(--framer-text-decoration)));\n}`; // [data-framer-component-text-autosized] is no longer used, but still supported\n// included to maintain backwards compatibility for smart components that were\n// generated before it was removed:\n// https://github.com/framer/FramerStudio/pull/8270.\n\nconst textCSSRules = [`[data-framer-component-type=\"Text\"] { cursor: inherit; }`, `[data-framer-component-text-autosized] * { white-space: pre; }`, textAlignmentRule, textBlockSpanRule, textInlineSpanRule, renderTextStylesRule, textStylesRule, linkStylesRule, linkHoverStylesRule, linkCurrentStylesRule];\nconst richTextDefaultStylesRule = `\n[data-framer-component-type=\"RichText\"] p,\n[data-framer-component-type=\"RichText\"] span {\n    font: Inter, sans-serif;\n    color: #000;\n    font-size: 16px;\n    letter-spacing: 0;\n    line-height: var(--line-height, 1.2em);\n}\n`;\nconst richTextCSSRules = [`[data-framer-component-type=\"RichText\"] { cursor: inherit; }`, `[data-framer-component-type=\"RichText\"] p { margin: 0; padding: 0; }`, `[data-framer-component-type=\"RichText\"] em { font-style: italic; }`, `[data-framer-component-type=\"RichText\"] strong { font-weight: bolder; }`, richTextDefaultStylesRule, ...richTextLinkStyleRules];\n/**\n * In generated code sticky is set via CSS, we don't want to set\n * `position: relative` here since it has a higher precedence. Code-gen stack\n * children will receive their `position: relative` through style overrides:\n * https://github.com/framer/FramerStudio/blob/46a401385ffa6a138145451aa56b12588153c4bb/src/app/vekter/src/variants/utils/tagForNode.ts#L338-L340\n */\n\nconst stackPositionRule = `\n:not([data-framer-generated]) > [data-framer-stack-content-wrapper] > *,\n:not([data-framer-generated]) > [data-framer-stack-content-wrapper] > [data-framer-component-type],\n:not([data-framer-generated]) > [data-framer-stack-content-wrapper] > [data-framer-stack-gap] > *,\n:not([data-framer-generated]) > [data-framer-stack-content-wrapper] > [data-framer-stack-gap] > [data-framer-component-type] {\n    position: relative;\n}`;\n/**\n * Our isFlexboxGapSupported helper relies on DOM measurement, which is not 100%\n * reliable, it could return false while the user agent actually supports gap,\n * for example, if the document is not visible at the time the check runs.\n * Therefore we need to make sure if it determines gap is not supported, we\n * don't use the gap CSS at all, otherwise we end up with double gaps. We could\n * remove the unset rule when we have a proper way to test flexbox gap support.\n * see: https://github.com/framer/company/issues/23712\n * Since the gap variable is available for all stack descendants, we also need\n * to make sure `gap` is used for the ones that's using flexbox gap (has their\n * own --stack-native-gap set), that way nested stacks with different gap\n * settings would work as expected.\n */\n\nconst nativeStackGapRules = [`[data-framer-stack-content-wrapper][data-framer-stack-gap-enabled=\"true\"] { gap: var(--stack-native-gap); }`, `.${flexboxGapNotSupportedClass} [data-framer-stack-content-wrapper][data-framer-stack-gap-enabled=\"true\"] { gap: unset; }`];\nconst stackGapRule = `\n.${flexboxGapNotSupportedClass} [data-framer-stack-gap] > *, [data-framer-stack-gap][data-framer-stack-flexbox-gap=\"false\"] {\n    margin-top: calc(var(--stack-gap-y) / 2);\n    margin-bottom: calc(var(--stack-gap-y) / 2);\n    margin-right: calc(var(--stack-gap-x) / 2);\n    margin-left: calc(var(--stack-gap-x) / 2);\n}\n`;\n/* This should take the language direction into account */\n\nconst stackDirectionRuleVertical = `\n.${flexboxGapNotSupportedClass}\n[data-framer-stack-direction-reverse=\"false\"]\n[data-framer-stack-gap]\n> *:first-child,\n[data-framer-stack-direction-reverse=\"false\"]\n[data-framer-stack-gap][data-framer-stack-flexbox-gap=\"false\"]\n> *:first-child,\n.${flexboxGapNotSupportedClass}\n[data-framer-stack-direction-reverse=\"true\"]\n[data-framer-stack-gap]\n> *:last-child,\n[data-framer-stack-direction-reverse=\"true\"]\n[data-framer-stack-gap][data-framer-stack-flexbox-gap=\"false\"]\n> *:last-child {\n    margin-top: 0;\n    margin-left: 0;\n}`;\n/* This should take the language direction into account */\n\nconst stackDirectionRuleHorizontal = `\n.${flexboxGapNotSupportedClass}\n[data-framer-stack-direction-reverse=\"false\"]\n[data-framer-stack-gap]\n> *:last-child,\n[data-framer-stack-direction-reverse=\"false\"]\n[data-framer-stack-gap][data-framer-stack-flexbox-gap=\"false\"]\n> *:last-child,\n.${flexboxGapNotSupportedClass}\n[data-framer-stack-direction-reverse=\"true\"]\n[data-framer-stack-gap]\n> *:first-child,\n[data-framer-stack-direction-reverse=\"true\"]\n[data-framer-stack-gap][data-framer-stack-flexbox-gap=\"false\"]\n> *:first-child {\n    margin-right: 0;\n    margin-bottom: 0;\n}`;\nconst stackCSSRules = [stackPositionRule, stackGapRule, ...nativeStackGapRules, stackDirectionRuleVertical, stackDirectionRuleHorizontal];\nconst navigationCSSRules = [`\nNavigationContainer\n[data-framer-component-type=\"NavigationContainer\"] > *,\n[data-framer-component-type=\"NavigationContainer\"] > [data-framer-component-type] {\n    position: relative;\n}`];\nconst scrollCSSRules = [`[data-framer-component-type=\"Scroll\"]::-webkit-scrollbar { display: none; }`, `[data-framer-component-type=\"ScrollContentWrapper\"] > * { position: relative; }`];\nconst nativeScrollCSSRules = [`[data-framer-component-type=\"NativeScroll\"] { -webkit-overflow-scrolling: touch; }`, `[data-framer-component-type=\"NativeScroll\"] > * { position: relative; }`, `[data-framer-component-type=\"NativeScroll\"].direction-both { overflow-x: scroll; overflow-y: scroll; }`, `[data-framer-component-type=\"NativeScroll\"].direction-vertical { overflow-x: hidden; overflow-y: scroll; }`, `[data-framer-component-type=\"NativeScroll\"].direction-horizontal { overflow-x: scroll; overflow-y: hidden; }`, `[data-framer-component-type=\"NativeScroll\"].direction-vertical > * { width: 100% !important; }`, `[data-framer-component-type=\"NativeScroll\"].direction-horizontal > * { height: 100% !important; }`, `[data-framer-component-type=\"NativeScroll\"].scrollbar-hidden::-webkit-scrollbar { display: none; }`];\nconst pageContentWrapperWrapperCSSRules = [`[data-framer-component-type=\"PageContentWrapper\"] > *, [data-framer-component-type=\"PageContentWrapper\"] > [data-framer-component-type] { position: relative; }`];\nconst presenceCSS = [`[data-is-present=\"false\"], [data-is-present=\"false\"] * { pointer-events: none !important; }`];\nconst cursorCSS = [`[data-framer-cursor=\"pointer\"] { cursor: pointer; }`, `[data-framer-cursor=\"grab\"] { cursor: grab; }`, `[data-framer-cursor=\"grab\"]:active { cursor: grabbing; }`];\n/**\n * Add propagation-blocking if we're not on the canvas. If we add this while on the canvas,\n * strange behaviour can appear in the Component panel, with the drag event being blocked.\n */\n\nconst frameCSSRules = isPreview => {\n  return isPreview ? [`[data-framer-component-type=\"Frame\"] *, [data-framer-component-type=\"Stack\"] * { pointer-events: auto; }`] : [];\n};\n\nconst svgCSSRules = [`.svgContainer svg { display: block; }`];\n\nconst combineCSSRules = isPreview => [...componentCSSRules, ...textCSSRules, ...richTextCSSRules, ...stackCSSRules, ...navigationCSSRules, ...scrollCSSRules, ...nativeScrollCSSRules, ...pageContentWrapperWrapperCSSRules, ...presenceCSS, ...cursorCSS, ...frameCSSRules(isPreview), ...svgCSSRules]; // Only generate preview and non preview styles once\n\n/** @internal */\n\n\nexport const combinedCSSRules = combineCSSRules(false);\n/** @internal */\n\nexport const combinedCSSRulesForPreview = combineCSSRules(true);\n/** @internal */\n\nexport const injectComponentCSSRules = (sheet, cache) => {\n  const styles = RenderTarget.current() === RenderTarget.preview ? combinedCSSRulesForPreview : combinedCSSRules;\n\n  for (const rule of styles) CSS.injectCSSRule(rule.trim(), sheet, cache);\n};","map":{"version":3,"mappings":"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","names":["CSS","RenderTarget","richTextLinkStyleRules","flexboxGapNotSupportedClass","componentCSSRules","textAlignmentRule","textBlockSpanRule","textInlineSpanRule","renderTextStylesRule","textStylesRule","linkStylesRule","linkHoverStylesRule","linkCurrentStylesRule","textCSSRules","richTextDefaultStylesRule","richTextCSSRules","stackPositionRule","nativeStackGapRules","stackGapRule","stackDirectionRuleVertical","stackDirectionRuleHorizontal","stackCSSRules","navigationCSSRules","scrollCSSRules","nativeScrollCSSRules","pageContentWrapperWrapperCSSRules","presenceCSS","cursorCSS","frameCSSRules","isPreview","svgCSSRules","combineCSSRules","combinedCSSRules","combinedCSSRulesForPreview","injectComponentCSSRules","sheet","cache","styles","current","preview","rule","injectCSSRule","trim"],"sources":["../../../src/render/utils/injectComponentCSSRules.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}