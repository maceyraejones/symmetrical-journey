{"ast":null,"code":"import { roundedNumberString } from \"./roundedNumber.js\";\n/** @internal */\n\nexport function transformString(transform) {\n  if (transform === undefined) {\n    return undefined;\n  }\n\n  const {\n    x,\n    y,\n    rotation,\n    width,\n    height\n  } = transform;\n  let result;\n\n  if (x !== 0 || y !== 0) {\n    result = `translate(${roundedNumberString(x, 3)} ${roundedNumberString(y, 3)})`;\n  }\n\n  if (rotation !== 0) {\n    const roundedRotation = roundedNumberString(rotation, 4);\n    const roundedWidth = roundedNumberString(width / 2, 3);\n    const roundedHeight = roundedNumberString(height / 2, 3);\n    const rotationString = `rotate(${roundedRotation} ${roundedWidth} ${roundedHeight})`;\n    result = result ? `${result} ${rotationString}` : rotationString;\n  }\n\n  return result;\n}","map":{"version":3,"mappings":"AAAA,SAASA,mBAAT,QAAoC,oBAApC;AAGA;;AACA,OAAM,SAAUC,eAAV,CAA0BC,SAA1B,EAAgE;AAClE,MAAIA,SAAS,KAAKC,SAAlB,EAA6B;AACzB,WAAOA,SAAP;AACH;;AACD,QAAM;AAAEC,KAAF;AAAKC,KAAL;AAAQC,YAAR;AAAkBC,SAAlB;AAAyBC;AAAzB,MAAoCN,SAA1C;AACA,MAAIO,MAAJ;;AACA,MAAIL,CAAC,KAAK,CAAN,IAAWC,CAAC,KAAK,CAArB,EAAwB;AACpBI,UAAM,GAAG,aAAaT,mBAAmB,CAACI,CAAD,EAAI,CAAJ,CAAM,IAAIJ,mBAAmB,CAACK,CAAD,EAAI,CAAJ,CAAM,GAA5E;AACH;;AACD,MAAIC,QAAQ,KAAK,CAAjB,EAAoB;AAChB,UAAMI,eAAe,GAAGV,mBAAmB,CAACM,QAAD,EAAW,CAAX,CAA3C;AACA,UAAMK,YAAY,GAAGX,mBAAmB,CAACO,KAAK,GAAG,CAAT,EAAY,CAAZ,CAAxC;AACA,UAAMK,aAAa,GAAGZ,mBAAmB,CAACQ,MAAM,GAAG,CAAV,EAAa,CAAb,CAAzC;AACA,UAAMK,cAAc,GAAG,UAAUH,eAAe,IAAIC,YAAY,IAAIC,aAAa,GAAjF;AACAH,UAAM,GAAGA,MAAM,GAAG,GAAGA,MAAM,IAAII,cAAc,EAA9B,GAAmCA,cAAlD;AACH;;AACD,SAAOJ,MAAP;AACH","names":["roundedNumberString","transformString","transform","undefined","x","y","rotation","width","height","result","roundedRotation","roundedWidth","roundedHeight","rotationString"],"sources":["../../../src/render/utils/transformString.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}