{"ast":null,"code":"// Used for inspection\n\n/** @public */\nexport var ColorFormat;\n\n(function (ColorFormat) {\n  ColorFormat[\"RGB\"] = \"rgb\";\n  ColorFormat[\"HSL\"] = \"hsl\";\n  ColorFormat[\"HSV\"] = \"hsv\";\n  ColorFormat[\"HEX\"] = \"hex\";\n  ColorFormat[\"NAME\"] = \"name\";\n})(ColorFormat || (ColorFormat = {}));\n/**\n * Various Color functions, such as {@link (Color:namespace).mix} and {@link\n * (Color:namespace).interpolate}, take an optional color model that\n * determines how two colors are mixed together.\n *\n * @remarks\n *\n * ```javascript\n * const newColor = Color.mix(Color(\"red\"), Color(\"blue\"), {model: ColorMixModelType.HSL})\n * ```\n *\n * @public\n */\n\n\nexport var ColorMixModelType;\n\n(function (ColorMixModelType) {\n  /**\n   * Use the {@link https://en.wikipedia.org/wiki/RGB_color_model | RGB color space} without an alpha value\n   *\n   * @remarks\n   *\n   * ```javascript\n   * const newColor = Color.mix(Color(\"red\"), Color(\"blue\"), {model: ColorMixModelType.RGB})\n   * ```\n   *\n   * @public\n   */\n  ColorMixModelType[\"RGB\"] = \"rgb\";\n  /**\n   * Use the {@link https://en.wikipedia.org/wiki/RGB_color_model | RGB color space} color space with an alpha value\n   *\n   * @remarks\n   *\n   * ```javascript\n   * const newColor = Color.mix(Color(\"red\"), Color(\"blue\"), {model: ColorMixModelType.RGBA})\n   * ```\n   *\n   * @public\n   */\n\n  ColorMixModelType[\"RGBA\"] = \"rgba\";\n  /**\n   * Use the {@link https://en.wikipedia.org/wiki/HSL_and_HSV | HSL} color space with an alpha value\n   *\n   * @remarks\n   *\n   * ```javascript\n   * const newColor = Color.mix(Color(\"red\"), Color(\"blue\"), {model: ColorMixModelType.HSL})\n   * ```\n   *\n   * @public\n   */\n\n  ColorMixModelType[\"HSL\"] = \"hsl\";\n  /**\n   * Use the {@link https://en.wikipedia.org/wiki/HSL_and_HSV | HSL} color space with an alpha value\n   *\n   * @remarks\n   *\n   * ```javascript\n   * const newColor = Color.mix(Color(\"red\"), Color(\"blue\"), {model: ColorMixModelType.HSLA})\n   * ```\n   *\n   * @public\n   */\n\n  ColorMixModelType[\"HSLA\"] = \"hsla\";\n  /**\n   * Use the {@link http://www.hsluv.org | HSLuv } human friendly color model\n   *\n   * @remarks\n   *\n   * ```javascript\n   * const newColor = Color.mix(Color(\"red\"), Color(\"blue\"), {model: ColorMixModelType.HUSL})\n   * ```\n   *\n   * @public\n   */\n\n  ColorMixModelType[\"HUSL\"] = \"husl\";\n})(ColorMixModelType || (ColorMixModelType = {}));","map":{"version":3,"mappings":"AAAA;;AACA;AACA,WAAYA,WAAZ;;AAAA,WAAYA,WAAZ,EAAuB;AACnBA;AACAA;AACAA;AACAA;AACAA;AACH,CAND,EAAYA,WAAW,KAAXA,WAAW,MAAvB;AAsEA;;;;;;;;;;;;;;;AAaA,WAAYC,iBAAZ;;AAAA,WAAYA,iBAAZ,EAA6B;AACzB;;;;;;;;;;;AAWAA;AACA;;;;;;;;;;;;AAWAA;AACA;;;;;;;;;;;;AAWAA;AACA;;;;;;;;;;;;AAWAA;AACA;;;;;;;;;;;;AAWAA;AACH,CA7DD,EAAYA,iBAAiB,KAAjBA,iBAAiB,MAA7B","names":["ColorFormat","ColorMixModelType"],"sources":["../../../../src/render/types/Color/types.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}