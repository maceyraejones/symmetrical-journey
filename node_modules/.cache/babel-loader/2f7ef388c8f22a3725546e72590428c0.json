{"ast":null,"code":"/* eslint-disable no-console */\n\n/**\n * @module\n * This module provides stubs for the Router API used in Handshake instead of the private Framer Router.\n * */\nimport * as React from \"react\";\nexport const ComponentWithPreload = stubbedComponent(\"ComponentWithPreload\");\nexport const RoutesProvider = stubbedComponent(\"RoutesProvider\");\nexport const Router = stubbedComponent(\"Router\");\nexport function computeRelativePath(_from, _to) {\n  return \"\";\n}\nexport function isRoute(route) {\n  return false;\n}\nexport function getRouteElementId(_route, _elementId) {\n  return undefined;\n}\nexport function useCurrentRouteId() {\n  return undefined;\n}\nexport function useRouter() {\n  return {\n    navigate(_routeId, _elementId) {},\n\n    getRoute(_routeId, _elementId) {\n      return undefined;\n    },\n\n    currentRouteId: \"\"\n  };\n}\n/**\n * @internal\n */\n\nexport function useRouteAnchor(_routeId) {\n  let {\n    elementId\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return {\n    onClick: () => {},\n    href: \"#\"\n  };\n}\n/**\n * @internal\n */\n\nexport function useRouteHandler(_routeId) {\n  let _preload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  let elementId = arguments.length > 2 ? arguments[2] : undefined;\n  return () => {};\n}\nexport function useRoutePreloader(_routeIds) {\n  let _enabled = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  return;\n}\n\nfunction stubbedComponent(componentName) {\n  return _ref => {\n    let {\n      children\n    } = _ref;\n    console.warn(`Using stubbed \\`${componentName}\\``);\n    return React.createElement(React.Fragment, null, children);\n  };\n}","map":{"version":3,"mappings":"AAAA;;AACA;;;;AAKA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAOA,OAAO,MAAMC,oBAAoB,GAAQC,gBAAgB,CAAC,sBAAD,CAAlD;AACP,OAAO,MAAMC,cAAc,GAAQD,gBAAgB,CAAC,gBAAD,CAA5C;AACP,OAAO,MAAME,MAAM,GAAQF,gBAAgB,CAAC,QAAD,CAApC;AAEP,OAAM,SAAUG,mBAAV,CAA8BC,KAA9B,EAA6CC,GAA7C,EAAwD;AAC1D,SAAO,EAAP;AACH;AACD,OAAM,SAAUC,OAAV,CAAkBC,KAAlB,EAAgC;AAClC,SAAO,KAAP;AACH;AACD,OAAM,SAAUC,iBAAV,CAA4BC,MAA5B,EAA4CC,UAA5C,EAA+D;AACjE,SAAOC,SAAP;AACH;AACD,OAAM,SAAUC,iBAAV,GAA2B;AAC7B,SAAOD,SAAP;AACH;AACD,OAAM,SAAUE,SAAV,GAAmB;AACrB,SAAO;AACHC,YAAQ,CAACC,QAAD,EAAgBL,UAAhB,EAAmC,CAAI,CAD5C;;AAEHM,YAAQ,CAACD,QAAD,EAAoBL,UAApB,EAAuC;AAC3C,aAAOC,SAAP;AACH,KAJE;;AAKHM,kBAAc,EAAE;AALb,GAAP;AAOH;AACD;;;;AAGA,OAAM,SAAUC,cAAV,CAAyBH,QAAzB,EAAsF;AAAA,MAA1C;AAAEI;AAAF,GAA0C,uEAAF,EAAE;AACxF,SAAO;AAAEC,WAAO,EAAE,MAAK,CAAG,CAAnB;AAAqBC,QAAI,EAAE;AAA3B,GAAP;AACH;AACD;;;;AAGA,OAAM,SAAUC,eAAV,CAA0BP,QAA1B,EAA0F;AAAA,MAA7CQ,QAA6C,uEAAzB,KAAyB;;AAAA,MAAlBJ,SAAkB;AAC5F,SAAO,MAAK,CAAG,CAAf;AACH;AACD,OAAM,SAAUK,iBAAV,CAA4BC,SAA5B,EAA0E;AAAA,MAAxBC,QAAwB,uEAAJ,IAAI;;AAC5E;AACH;;AAED,SAAS1B,gBAAT,CAA0B2B,aAA1B,EAA+C;AAC3C,SAAO,QAAqC;AAAA,QAApC;AAAEC;AAAF,KAAoC;AACxCC,WAAO,CAACC,IAAR,CAAa,mBAAmBH,aAAa,IAA7C;AACA,WAAO7B,0CAAG8B,QAAH,CAAP;AACH,GAHD;AAIH","names":["React","ComponentWithPreload","stubbedComponent","RoutesProvider","Router","computeRelativePath","_from","_to","isRoute","route","getRouteElementId","_route","_elementId","undefined","useCurrentRouteId","useRouter","navigate","_routeId","getRoute","currentRouteId","useRouteAnchor","elementId","onClick","href","useRouteHandler","_preload","useRoutePreloader","_routeIds","_enabled","componentName","children","console","warn"],"sources":["../../src/router/stub.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}